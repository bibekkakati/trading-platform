{"version":3,"sources":["components/MenuBar.js","layouts/Sidebar.js","ws_client/ws_functions.js","context/MarketDataContext.js","context/CompactDataContext.js","layouts/Panel.js","context/BookContext.js","config/firebase.js","components/TopBar.js","scripfunctions/scripfunction.js","components/InstrumentList.js","components/Depth.js","components/InstrumentData.js","api_calls/api_functions.js","components/OrderForm.js","components/Clients.js","components/InfoPanel.js","searchfunction/algolia.js","components/Modal.js","components/AddClient.js","components/PendingOrder.js","components/CompletedOrder.js","components/TradeBook.js","components/ClientList.js","components/OrderBook.js","components/Notification.js","components/NotificationList.js","components/AllOrder.js","pages/entrypoint.js","context/AuthContext.js","pages/signing.js","App.js","serviceWorker.js","index.js"],"names":["MenuBar","state","menuState","openRoute","setState","props","className","this","onClick","showNotification","PureComponent","Sidebar","Modes","Exchanges","Multiplier","Fixedto","connect","token","Promise","resolve","reject","ws","WebSocket","process","onopen","setInterval","send","a","v","m","msg","onerror","evt","error","subscribe","exchangeTokenList","mode","JSON","stringify","unsubscribe","onmessage","data","instrumentData","DataView","slice","getInt8","toString","exchangeCode","exchange","multiplier","fixedto","instrumentToken","getInt32","ltp","toFixed","change","orderInstrumentToken","volume","tbq","getBigInt64","tsq","atp","openPrice","highPrice","lowPrice","closePrice","topBidPrice","topAskPrice","topBidQty","topAskQty","bidmax","askmax","i","bidprice","bidqty","askprice","askqty","parseInt","Math","max","MarketDataContext","createContext","MarketDataContextProvider","clientsList","activeClients","notification","upperCircuit","lowerCircuit","lltp","symbol","nifty50","sensex","updateData","Provider","value","children","CompactDataContext","CompactDataContextProvider","instruments","compactDataList","Panel","componentDidMount","online","connectWebsocket","window","addEventListener","e","console","log","loadClients","context","length","socket","then","obj","currentScrip","currentInstruments","loadIndex","arrayBuffer","blob","whichStatesToUpdate","onclose","wasClean","catch","clientToken","clients","localStorage","getItem","clientid","parse","push","currentFullScrip","actionData","compactContext","scrip","updateMarketData","updateCompactData","ud","updateContext","Consumer","contextType","BookContext","BookContextProvider","selectedId","client_token","pendingOrders","completedOrders","trades","allOrders","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","TopBar","signoutdisplay","photoURL","user","auth","currentUser","openModal","openAddClientModal","signout","signOut","removeItem","history","alert","profileClicked","changeSignSensex","sign","changeSignNifty50","sensextrend","nifty50trend","data-change","src","alt","style","display","withRouter","removeFullScrip","hits","code","exchange_code","addFullScrip","setItem","addCompactScrip","removeCompactScrip","index","indexOf","splice","InstrumentList","checkTrendDirection","close","scrollRight","scroll","current","scrollLeft","removeScrip","moveScrip","React","createRef","insdivs","trend","changeSign","key","onDoubleClick","ref","Depth","bidpercent","divs","askpercent","background","Component","InstrumentData","axios","require","default","base_url","cancelOrder","orderid","user_token","url","method","headers","Authorization","response","modifyOrder","instrument_token","transaction_type","product","validity","order_type","price","trigger_price","quantity","put","oms_order_id","disclosed_quantity","getOrderBook","getTradeBook","placeOrder","order_tag","post","source","Accept","placeBracketOrder","square_off_value","stop_loss_value","trailing_stop_loss","login","client_id","client_secret","password","twofa","placeAmoOrder","db","firestore","OrderForm","updateNotificationList","notificationlist","updateOrdersToDB","col","doc","collection","set","merge","d","Date","getFullYear","getMonth","getDate","allOrderId","now","orderSide","toUpperCase","ordertype","parseFloat","trailingsl","stoploss","orderPerAccount","orderperac","disclosedquantity","triggerprice","target","position","complexity","userToken","dbObj","orderObj","side","arr","c","status","updateNotification","type","message","time","sellSideClass","buySideClass","updateFloatValue","Number","id","updateIntValue","updateConditions","val","disablePrice","disableStoploss","disablePosition","disableTriggerPrice","disableTarget","onChange","disabled","placeholder","Clients","addToActiveList","includes","removeFromActiveList","InfoPanel","algoliasearch","initIndex","fetchData","keywords","search","attributesToRetrieve","hitsPerPage","Modal","fetchResult","addWhichScrip","closeModal","removeWhichScrip","result","autoFocus","AddClient","closeAddClientModal","updateValue","trim","secretkey","logging","access_token","success","error_msg","htmlFor","PendingOrder","order_id","showModal","orderAction","order","trading_symbol","h","s","order_entry_time","getHours","getMinutes","getSeconds","filled_quantity","CompletedOrder","order_status","TradeBook","ClientList","idSelected","clientIdDivs","OrderBook","ordertypesection","changeOrderTypeSection","section","undefined","Notification","setTimeout","NotificationList","AllOrder","allorderRef","orderscripRef","that","onSnapshot","allorder","orderscrip","ordernumber","client","orders","update","FieldValue","delete","marginRight","entrypoint","isLoading","notify","menuDivs","AuthContext","AuthContextProvider","checking","onAuthStateChanged","signing","signin","provider","GoogleAuthProvider","addScope","signInWithPopup","credential","accessToken","providerData","viewBox","xmlns","fill","App","path","render","to","exact","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.79d5362d.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport \"../css/MenuBar.css\";\r\nimport {\r\n  FaRegUserCircle,\r\n  FaUserFriends,\r\n  FaBookOpen,\r\n  FaSuitcase,\r\n  FaBell,\r\n} from \"react-icons/fa\";\r\nimport { AiFillHome } from \"react-icons/ai\";\r\n\r\nexport default class MenuBar extends PureComponent {\r\n  state = {\r\n    menuState: 0,\r\n  };\r\n\r\n  openRoute = (menuState) => {\r\n    this.setState({ menuState });\r\n    this.props.openRoute(menuState);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"menubar\">\r\n        <div className=\"icon user\">\r\n          <FaRegUserCircle />\r\n        </div>\r\n        <div className={this.state.menuState === 0 ? \"icon active\" : \"icon\"}>\r\n          <AiFillHome onClick={() => this.openRoute(0)} />\r\n        </div>\r\n        <div className=\"icon\">\r\n          <FaUserFriends />\r\n        </div>\r\n        <div className={this.state.menuState === 1 ? \"icon active\" : \"icon\"}>\r\n          <FaBookOpen onClick={() => this.openRoute(1)} />\r\n        </div>\r\n        <div className={this.state.menuState === 2 ? \"icon active\" : \"icon\"}>\r\n          <FaSuitcase onClick={() => this.openRoute(2)} />\r\n        </div>\r\n        <div className=\"icon\">\r\n          <FaBell onClick={this.props.showNotification} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport MenuBar from \"../components/MenuBar\";\r\n\r\nexport const Sidebar = (props) => {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <MenuBar\r\n        openRoute={props.openRoute}\r\n        showNotification={props.showNotification}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","const Modes = {\r\n  \"1\": \"marketdata\",\r\n  \"2\": \"compact_marketdata\",\r\n  \"3\": \"snapquote\",\r\n  \"4\": \"full_snapquote\",\r\n  \"5\": \"spreaddata\",\r\n  \"6\": \"spread_snapquote\",\r\n  \"7\": \"dpr\",\r\n  \"8\": \"oi\",\r\n  \"9\": \"market_status\",\r\n  \"10\": \"exchange_messages\",\r\n};\r\n\r\nconst Exchanges = {\r\n  \"1\": \"NSE\",\r\n  \"2\": \"NFO\",\r\n  \"3\": \"CDS\",\r\n  \"4\": \"MCX\",\r\n  \"6\": \"BSE\",\r\n  \"7\": \"BFO\",\r\n};\r\n\r\nconst Multiplier = {\r\n  \"1\": 100,\r\n  \"2\": 100,\r\n  \"3\": 10000000,\r\n  \"4\": 100,\r\n  \"6\": 100,\r\n  \"7\": 100,\r\n};\r\n\r\nconst Fixedto = {\r\n  \"1\": 2,\r\n  \"2\": 2,\r\n  \"3\": 4,\r\n  \"4\": 2,\r\n  \"6\": 2,\r\n  \"7\": 2,\r\n};\r\n\r\nexport const connect = function (token) {\r\n  return new Promise(function (resolve, reject) {\r\n    var ws = new WebSocket(process.env.REACT_APP_WS_URL + token);\r\n    if (ws) {\r\n      ws.onopen = () => {\r\n        setInterval(() => {\r\n          ws.send({ a: \"h\", v: [], m: \"\" });\r\n        }, 5000);\r\n        resolve({\r\n          msg: \"Connected to WebSocket\",\r\n          ws: ws,\r\n        });\r\n      };\r\n      ws.onerror = (evt) => {\r\n        reject({ error: \"WebSocket connection failed\" });\r\n      };\r\n    } else {\r\n      reject({ error: \"WebSocket connection failed\" });\r\n    }\r\n  });\r\n};\r\n\r\nexport const subscribe = function (ws, exchangeTokenList, mode) {\r\n  ws.send(\r\n    JSON.stringify({\r\n      a: \"subscribe\",\r\n      v: exchangeTokenList,\r\n      m: Modes[mode],\r\n    })\r\n  );\r\n};\r\n\r\nexport const unsubscribe = function (ws, exchangeTokenList, mode) {\r\n  ws.send(\r\n    JSON.stringify({\r\n      a: \"unsubscribe\",\r\n      v: exchangeTokenList,\r\n      m: Modes[mode],\r\n    })\r\n  );\r\n};\r\n\r\nexport const onmessage = function (data) {\r\n  return new Promise((resolve, reject) => {\r\n    var instrumentData = {};\r\n    instrumentData.mode = new DataView(data.slice(0, 1, \"int8\"));\r\n    instrumentData.mode = instrumentData.mode.getInt8(0).toString(10);\r\n    instrumentData.exchangeCode = new DataView(data.slice(1, 2, \"int8\"));\r\n    instrumentData.exchangeCode = instrumentData.exchangeCode\r\n      .getInt8(0)\r\n      .toString(10);\r\n    instrumentData.exchange = Exchanges[instrumentData.exchangeCode];\r\n    var multiplier = Multiplier[instrumentData.exchangeCode];\r\n    var fixedto = Fixedto[instrumentData.exchangeCode];\r\n    if (instrumentData.mode === \"2\") {\r\n      instrumentData.instrumentToken = new DataView(data.slice(2, 6, \"int32\"));\r\n      instrumentData.instrumentToken = instrumentData.instrumentToken\r\n        .getInt32(0)\r\n        .toString(10);\r\n\r\n      instrumentData.ltp = new DataView(data.slice(6, 10, \"int32\"));\r\n      instrumentData.ltp = instrumentData.ltp.getInt32(0).toString(10);\r\n      instrumentData.ltp = (instrumentData.ltp / multiplier).toFixed(2);\r\n\r\n      instrumentData.change = new DataView(data.slice(10, 14, \"int32\"));\r\n      instrumentData.change = instrumentData.change.getInt32(0).toString(10);\r\n      instrumentData.change = (instrumentData.change / multiplier).toFixed(\r\n        fixedto\r\n      );\r\n    } else if (instrumentData.mode === \"1\") {\r\n      instrumentData.orderInstrumentToken = new DataView(\r\n        data.slice(2, 6, \"int32\")\r\n      );\r\n      instrumentData.orderInstrumentToken = instrumentData.orderInstrumentToken\r\n        .getInt32(0)\r\n        .toString(10);\r\n\r\n      instrumentData.volume = new DataView(data.slice(18, 22, \"int32\"));\r\n      instrumentData.volume = instrumentData.volume.getInt32(0).toString(10);\r\n\r\n      instrumentData.ltp = new DataView(data.slice(6, 10, \"int32\"));\r\n      instrumentData.ltp = instrumentData.ltp.getInt32(0).toString(10);\r\n      instrumentData.ltp = (instrumentData.ltp / multiplier).toFixed(fixedto);\r\n\r\n      instrumentData.tbq = new DataView(data.slice(38, 46, \"int64\"));\r\n      instrumentData.tbq = instrumentData.tbq.getBigInt64(0).toString(10);\r\n\r\n      instrumentData.tsq = new DataView(data.slice(46, 54, \"int64\"));\r\n      instrumentData.tsq = instrumentData.tsq.getBigInt64(0).toString(10);\r\n\r\n      instrumentData.atp = new DataView(data.slice(54, 58, \"int32\"));\r\n      instrumentData.atp = instrumentData.atp.getInt32(0).toString(10);\r\n      instrumentData.atp = (instrumentData.atp / multiplier).toFixed(fixedto);\r\n\r\n      instrumentData.openPrice = new DataView(data.slice(62, 66, \"int32\"));\r\n      instrumentData.openPrice = instrumentData.openPrice\r\n        .getInt32(0)\r\n        .toString(10);\r\n      instrumentData.openPrice = (\r\n        instrumentData.openPrice / multiplier\r\n      ).toFixed(fixedto);\r\n\r\n      instrumentData.highPrice = new DataView(data.slice(66, 70, \"int32\"));\r\n      instrumentData.highPrice = instrumentData.highPrice\r\n        .getInt32(0)\r\n        .toString(10);\r\n      instrumentData.highPrice = (\r\n        instrumentData.highPrice / multiplier\r\n      ).toFixed(fixedto);\r\n\r\n      instrumentData.lowPrice = new DataView(data.slice(70, 74, \"int32\"));\r\n      instrumentData.lowPrice = instrumentData.lowPrice\r\n        .getInt32(0)\r\n        .toString(10);\r\n      instrumentData.lowPrice = (instrumentData.lowPrice / multiplier).toFixed(\r\n        fixedto\r\n      );\r\n\r\n      instrumentData.closePrice = new DataView(data.slice(74, 78, \"int32\"));\r\n      instrumentData.closePrice = instrumentData.closePrice\r\n        .getInt32(0)\r\n        .toString(10);\r\n      instrumentData.closePrice = (\r\n        instrumentData.closePrice / multiplier\r\n      ).toFixed(fixedto);\r\n\r\n      instrumentData.change = (\r\n        instrumentData.ltp - instrumentData.closePrice\r\n      ).toFixed(fixedto);\r\n    } else if (instrumentData.mode === \"3\") {\r\n      instrumentData.orderInstrumentToken = new DataView(\r\n        data.slice(2, 6, \"int32\")\r\n      );\r\n      instrumentData.orderInstrumentToken = instrumentData.orderInstrumentToken\r\n        .getInt32(0)\r\n        .toString(10);\r\n\r\n      let topBidPrice = [];\r\n      let topAskPrice = [];\r\n      let topBidQty = [];\r\n      let topAskQty = [];\r\n      let bidmax = 0;\r\n      let askmax = 0;\r\n      for (let i = 0; i < 5; i++) {\r\n        let bidprice = new DataView(\r\n          data.slice(26 + i * 4, 30 + i * 4, \"int32\")\r\n        );\r\n        let bidqty = new DataView(data.slice(46 + i * 4, 50 + i * 4, \"int32\"));\r\n        let askprice = new DataView(\r\n          data.slice(86 + i * 4, 90 + i * 4, \"int32\")\r\n        );\r\n        let askqty = new DataView(\r\n          data.slice(106 + i * 4, 110 + i * 4, \"int32\")\r\n        );\r\n\r\n        bidprice = (bidprice.getInt32(0).toString(10) / multiplier).toFixed(\r\n          fixedto\r\n        );\r\n        bidqty = bidqty.getInt32(0).toString(10);\r\n        bidqty = parseInt(bidqty);\r\n        bidmax = Math.max(bidmax, bidqty);\r\n\r\n        askprice = (askprice.getInt32(0).toString(10) / multiplier).toFixed(\r\n          fixedto\r\n        );\r\n        askqty = askqty.getInt32(0).toString(10);\r\n        askqty = parseInt(askqty);\r\n        askmax = Math.max(askmax, askqty);\r\n\r\n        topBidPrice[i] = bidprice;\r\n        topBidQty[i] = bidqty;\r\n        topAskPrice[i] = askprice;\r\n        topAskQty[i] = askqty;\r\n      }\r\n      instrumentData.topBidPrice = topBidPrice;\r\n      instrumentData.topAskPrice = topAskPrice;\r\n      instrumentData.topBidQty = topBidQty;\r\n      instrumentData.topAskQty = topAskQty;\r\n      instrumentData.bidmax = bidmax;\r\n      instrumentData.askmax = askmax;\r\n    }\r\n\r\n    resolve(instrumentData);\r\n  });\r\n};\r\n\r\nexport default {\r\n  connect: connect,\r\n  onmessage: onmessage,\r\n  subscribe: subscribe,\r\n  unsubscribe: unsubscribe,\r\n};\r\n","import React, { PureComponent, createContext } from \"react\";\r\n\r\nexport const MarketDataContext = createContext();\r\n\r\nexport default class MarketDataContextProvider extends PureComponent {\r\n  state = {\r\n    clientsList: {},\r\n    activeClients: [],\r\n    notification: [],\r\n    ws: \"\",\r\n    exchange: \"\",\r\n    exchangeCode: \"\",\r\n    orderInstrumentToken: \"\",\r\n    topAskPrice: [0.0, 0.0, 0.0, 0.0, 0.0],\r\n    topAskQty: [0, 0, 0, 0, 0],\r\n    topBidPrice: [0.0, 0.0, 0.0, 0.0, 0.0],\r\n    topBidQty: [0, 0, 0, 0, 0],\r\n    bidmax: 0,\r\n    askmax: 0,\r\n    tbq: 0,\r\n    tsq: 0,\r\n    upperCircuit: \"NA\",\r\n    lowerCircuit: \"NA\",\r\n    volume: \"NA\",\r\n    atp: 0.0,\r\n    openPrice: 0.0,\r\n    highPrice: 0.0,\r\n    lowPrice: 0.0,\r\n    closePrice: 0.0,\r\n    change: 0.0,\r\n    lltp: 0.0,\r\n    ltp: 0.0,\r\n    symbol: \"\",\r\n    nifty50: {\r\n      ltp: 0.0,\r\n      change: 0.0,\r\n      lltp: 0.0,\r\n    },\r\n    sensex: {\r\n      ltp: 0.0,\r\n      change: 0.0,\r\n      lltp: 0.0,\r\n    },\r\n    updateData: (data) => {\r\n      this.setState(data);\r\n    },\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <MarketDataContext.Provider value={{ ...this.state }}>\r\n        {this.props.children}\r\n      </MarketDataContext.Provider>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent, createContext } from \"react\";\r\n\r\nexport const CompactDataContext = createContext();\r\n\r\nexport default class CompactDataContextProvider extends PureComponent {\r\n  state = {\r\n    instruments: [],\r\n    compactDataList: [],\r\n    updateData: (data) => {\r\n      this.setState(data);\r\n    },\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <CompactDataContext.Provider value={{ ...this.state }}>\r\n        {this.props.children}\r\n      </CompactDataContext.Provider>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport \"./Panel.css\";\r\nimport * as socket from \"../ws_client/ws_functions\";\r\nimport { MarketDataContext } from \"../context/MarketDataContext\";\r\nimport { CompactDataContext } from \"../context/CompactDataContext\";\r\n\r\nexport default class Panel extends PureComponent {\r\n  static contextType = MarketDataContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ws: false,\r\n      online: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.setState({ online: true });\r\n    this.connectWebsocket();\r\n    window.addEventListener(\"offline\", (e) => {\r\n      this.setState({ online: false });\r\n      console.log(\"offline\");\r\n    });\r\n    window.addEventListener(\"online\", (e) => {\r\n      this.setState({ online: true });\r\n      if (!this.state.ws) {\r\n        this.connectWebsocket();\r\n      }\r\n      console.log(\"online\");\r\n    });\r\n  };\r\n\r\n  connectWebsocket = async () => {\r\n    await this.loadClients();\r\n    var token = \"\";\r\n    if (this.context.activeClients.length > 0) {\r\n      token = this.context.clientsList[this.context.activeClients[0]];\r\n    }\r\n    socket\r\n      .connect(token)\r\n      .then((obj) => {\r\n        this.ws = obj.ws;\r\n        this.context.updateData({ ws: obj.ws });\r\n        console.log(obj.msg);\r\n        this.setState({ ws: true });\r\n        this.currentScrip();\r\n        this.currentInstruments();\r\n        this.loadIndex();\r\n        this.ws.onmessage = (evt) => {\r\n          evt.data.arrayBuffer().then(async (blob) => {\r\n            var data = await socket.onmessage(blob);\r\n\r\n            this.whichStatesToUpdate(data);\r\n          });\r\n        };\r\n\r\n        this.ws.onerror = (evt) => {\r\n          console.log(`Websocket connection closed`);\r\n        };\r\n\r\n        this.ws.onclose = (evt) => {\r\n          this.setState({ ws: false });\r\n          this.context.updateData({ ws: \"\" });\r\n          if (evt.wasClean) {\r\n            console.log(`Websocket connection closed`);\r\n          } else {\r\n            console.log(\"Websocket connection disconnected\");\r\n          }\r\n          if (this.state.online) {\r\n            this.connectWebsocket();\r\n          }\r\n        };\r\n      })\r\n      .catch((msg) => {\r\n        console.log(msg.error);\r\n      });\r\n  };\r\n\r\n  loadClients = () => {\r\n    return new Promise((resolve) => {\r\n      var clients = localStorage.getItem(\"clientslist\");\r\n      var clientToken;\r\n      var clientsList = {};\r\n      var activeClients = [];\r\n      if (clients !== null) {\r\n        clients = JSON.parse(clients);\r\n        for (const clientid in clients) {\r\n          clientToken = localStorage.getItem(clientid);\r\n          if (clientToken !== null) {\r\n            clientsList[clientid] = clientToken;\r\n            activeClients.push(clientid);\r\n          }\r\n        }\r\n      }\r\n      this.context.updateData({ clientsList, activeClients });\r\n      resolve(true);\r\n    });\r\n  };\r\n\r\n  loadIndex = () => {\r\n    socket.subscribe(this.ws, [[1, 26000]], \"2\");\r\n    socket.subscribe(this.ws, [[6, 1]], \"2\");\r\n  };\r\n\r\n  currentScrip = () => {\r\n    return new Promise((resolve) => {\r\n      var currentFullScrip = localStorage.getItem(\"currentFullScrip\");\r\n      if (currentFullScrip) {\r\n        currentFullScrip = JSON.parse(currentFullScrip);\r\n        socket.subscribe(this.ws, [currentFullScrip.actionData], \"1\");\r\n        socket.subscribe(this.ws, [currentFullScrip.actionData], \"3\");\r\n        this.context.updateData({\r\n          symbol: currentFullScrip.symbol,\r\n          exchange: currentFullScrip.exchange,\r\n          orderInstrumentToken: currentFullScrip.actionData[1],\r\n          exchangeCode: currentFullScrip.actionData[0],\r\n        });\r\n      }\r\n      resolve(true);\r\n    });\r\n  };\r\n\r\n  currentInstruments = () => {\r\n    return new Promise((resolve) => {\r\n      let compactDataList = JSON.parse(localStorage.getItem(\"compactDataList\"));\r\n      let instruments = JSON.parse(localStorage.getItem(\"instruments\"));\r\n      if (compactDataList && instruments) {\r\n        this.compactContext.updateData({\r\n          compactDataList,\r\n          instruments,\r\n        });\r\n      } else {\r\n        resolve(true);\r\n      }\r\n      let scrip = \"\";\r\n      for (let i = 0; i < instruments.length; i++) {\r\n        scrip = instruments[i];\r\n        socket.subscribe(this.ws, [[scrip.exchangeCode, scrip.token]], \"2\");\r\n      }\r\n      resolve(true);\r\n    });\r\n  };\r\n\r\n  whichStatesToUpdate = (data) => {\r\n    switch (data.mode) {\r\n      case \"1\":\r\n        data.lltp =\r\n          data.ltp === this.context.ltp ? this.context.lltp : this.context.ltp;\r\n        this.updateMarketData(data);\r\n        break;\r\n      case \"3\":\r\n        this.updateMarketData(data);\r\n        break;\r\n      case \"2\":\r\n        this.updateCompactData(data);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  updateMarketData = (data) => {\r\n    this.context.updateData(data);\r\n  };\r\n\r\n  updateCompactData = (data) => {\r\n    if (data.instrumentToken === \"26000\") {\r\n      var nifty50 = {\r\n        ltp: data.ltp,\r\n        change: data.change,\r\n        lltp:\r\n          data.ltp === this.context.nifty50.ltp\r\n            ? this.context.nifty50.lltp\r\n            : this.context.nifty50.ltp,\r\n      };\r\n      this.context.updateData({\r\n        nifty50,\r\n      });\r\n    } else if (data.instrumentToken === \"1\") {\r\n      var sensex = {\r\n        ltp: data.ltp,\r\n        change: data.change,\r\n        lltp:\r\n          data.ltp === this.context.sensex.ltp\r\n            ? this.context.sensex.lltp\r\n            : this.context.sensex.ltp,\r\n      };\r\n      this.context.updateData({\r\n        sensex,\r\n      });\r\n    } else {\r\n      let instruments = [...this.compactContext.instruments];\r\n      for (let i = 0; i < instruments.length; i++) {\r\n        if (instruments[i].token === data.instrumentToken) {\r\n          let ud = { ...instruments[i] };\r\n          ud.ltp = data.ltp;\r\n          ud.lltp =\r\n            data.ltp === instruments[i].ltp\r\n              ? instruments[i].lltp\r\n              : instruments[i].ltp;\r\n          ud.change = data.change;\r\n          instruments[i] = ud;\r\n\r\n          this.compactContext.updateData({\r\n            instruments,\r\n          });\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  updateContext = (value) => {\r\n    this.compactContext = value;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <CompactDataContext.Consumer>\r\n        {(value) => {\r\n          this.updateContext(value);\r\n          return <div className=\"panel\">{this.props.children}</div>;\r\n        }}\r\n      </CompactDataContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent, createContext } from \"react\";\r\n\r\nexport const BookContext = createContext();\r\n\r\nexport default class BookContextProvider extends PureComponent {\r\n  state = {\r\n    selectedId: \"\",\r\n    client_token: \"\",\r\n    pendingOrders: {},\r\n    completedOrders: {},\r\n    trades: {},\r\n    allOrders: {},\r\n    updateData: (data) => {\r\n      this.setState(data);\r\n    },\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <BookContext.Provider value={{ ...this.state }}>\r\n        {this.props.children}\r\n      </BookContext.Provider>\r\n    );\r\n  }\r\n}\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nvar config = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nexport const Firebase = firebase;\r\n\r\nexport default { Firebase };\r\n","import React, { PureComponent } from \"react\";\r\nimport \"../css/TopBar.css\";\r\nimport \"../css/DataChange.css\";\r\nimport {\r\n  FiPlusCircle,\r\n  FiSearch,\r\n  FiArrowUpRight,\r\n  FiArrowDownRight,\r\n} from \"react-icons/fi\";\r\nimport { MarketDataContext } from \"../context/MarketDataContext\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Firebase } from \"../config/firebase\";\r\n\r\nclass TopBar extends PureComponent {\r\n  static contextType = MarketDataContext;\r\n  state = {\r\n    signoutdisplay: \"none\",\r\n    photoURL: \"\",\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    var user = JSON.parse(localStorage.getItem(\"userdata\"));\r\n    if (user != null) {\r\n      this.setState({ photoURL: user.photoURL });\r\n    } else {\r\n      user = Firebase.auth().currentUser;\r\n      if (user) {\r\n        this.setState({ photoURL: user.photoURL });\r\n      }\r\n    }\r\n  };\r\n\r\n  openModal = () => {\r\n    this.props.openModal(\"0\");\r\n  };\r\n\r\n  openAddClientModal = () => {\r\n    this.props.openAddClientModal();\r\n  };\r\n\r\n  signout = () => {\r\n    this.setState({ signoutdisplay: \"none\" });\r\n    Firebase.auth()\r\n      .signOut()\r\n      .then(() => {\r\n        localStorage.removeItem(\"authtoken\");\r\n        this.props.history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        if (error) {\r\n          alert(error);\r\n        }\r\n      });\r\n  };\r\n\r\n  profileClicked = () => {\r\n    if (this.state.signoutdisplay === \"none\") {\r\n      this.setState({ signoutdisplay: \"block\" });\r\n    } else {\r\n      this.setState({ signoutdisplay: \"none\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let changeSignSensex = Math.sign(\r\n      this.context.sensex.ltp - this.context.sensex.lltp\r\n    ).toString();\r\n    let changeSignNifty50 = Math.sign(\r\n      this.context.nifty50.ltp - this.context.nifty50.lltp\r\n    ).toString();\r\n    let sensextrend =\r\n      this.context.sensex.change >= 0 ? (\r\n        <FiArrowUpRight className=\"up\" />\r\n      ) : (\r\n        <FiArrowDownRight className=\"down\" />\r\n      );\r\n    let nifty50trend =\r\n      this.context.nifty50.change >= 0 ? (\r\n        <FiArrowUpRight className=\"up\" />\r\n      ) : (\r\n        <FiArrowDownRight className=\"down\" />\r\n      );\r\n    return (\r\n      <div className=\"topbar\">\r\n        <p className=\"title\">My Dashboard</p>\r\n        <div className=\"liveindex\">\r\n          <div className=\"ticker\">\r\n            <p className=\"index\">SENSEX</p>\r\n\r\n            <div className=\"tick\">\r\n              <p className=\"point\" data-change={changeSignSensex}>\r\n                {this.context.sensex.ltp}\r\n              </p>\r\n              <p className=\"change\">\r\n                ({this.context.sensex.change} {sensextrend})\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"ticker\">\r\n            <p className=\"index\">NIFTY 50</p>\r\n            <div className=\"tick\">\r\n              <p className=\"point\" data-change={changeSignNifty50}>\r\n                {this.context.nifty50.ltp}\r\n              </p>\r\n              <p className=\"change\">\r\n                ({this.context.nifty50.change} {nifty50trend})\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"right\">\r\n          <button className=\"addclient\" onClick={this.openAddClientModal}>\r\n            <FiPlusCircle className=\"plusicon\" /> &nbsp;&nbsp; ADD CLIENT\r\n          </button>\r\n\r\n          <div className=\"search\" onClick={this.openModal}>\r\n            <FiSearch />\r\n          </div>\r\n          <img\r\n            src={this.state.photoURL}\r\n            alt=\"\"\r\n            className=\"profile\"\r\n            onClick={this.profileClicked}\r\n          />\r\n          <p\r\n            className=\"signout\"\r\n            style={{ display: this.state.signoutdisplay }}\r\n            onClick={this.signout}\r\n          >\r\n            Sign Out\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(TopBar);\r\n","import * as socket from \"../ws_client/ws_functions\";\r\n\r\nexport const removeFullScrip = (hits, context) => {\r\n  var scrip = hits;\r\n  if (scrip.code === context.orderInstrumentToken) {\r\n    socket.unsubscribe(context.ws, [[scrip.exchange_code, scrip.code]], \"1\");\r\n    socket.unsubscribe(context.ws, [[scrip.exchange_code, scrip.code]], \"3\");\r\n    context.updateData({\r\n      exchange: \"\",\r\n      exchangeCode: \"\",\r\n      mode: \"\",\r\n      orderInstrumentToken: \"\",\r\n      topAskPrice: [0.0, 0.0, 0.0, 0.0, 0.0],\r\n      topAskQty: [0, 0, 0, 0, 0],\r\n      topBidPrice: [0.0, 0.0, 0.0, 0.0, 0.0],\r\n      topBidQty: [0, 0, 0, 0, 0],\r\n      bidmax: 0,\r\n      askmax: 0,\r\n      tbq: 0,\r\n      tsq: 0,\r\n      upperCircuit: \"NA\",\r\n      lowerCircuit: \"NA\",\r\n      volume: \"NA\",\r\n      atp: 0.0,\r\n      openPrice: 0.0,\r\n      highPrice: 0.0,\r\n      lowPrice: 0.0,\r\n      closePrice: 0.0,\r\n      change: 0.0,\r\n      lltp: 0.0,\r\n      ltp: 0.0,\r\n      symbol: \"\",\r\n    });\r\n    localStorage.removeItem(\"currentFullScrip\");\r\n  }\r\n};\r\n\r\nexport const addFullScrip = (hits, context) => {\r\n  var scrip = hits;\r\n  if (context.orderInstrumentToken && context.symbol) {\r\n    socket.unsubscribe(\r\n      context.ws,\r\n      [[context.exchangeCode, context.orderInstrumentToken]],\r\n      \"1\"\r\n    );\r\n    socket.unsubscribe(\r\n      context.ws,\r\n      [[context.exchangeCode, context.orderInstrumentToken]],\r\n      \"3\"\r\n    );\r\n  }\r\n\r\n  context.updateData({\r\n    orderInstrumentToken: scrip.code,\r\n    exchangeCode: scrip.exchange_code,\r\n    symbol: scrip.symbol,\r\n    exchange: scrip.exchange,\r\n    topAskPrice: [0.0, 0.0, 0.0, 0.0, 0.0],\r\n    topAskQty: [0, 0, 0, 0, 0],\r\n    topBidPrice: [0.0, 0.0, 0.0, 0.0, 0.0],\r\n    topBidQty: [0, 0, 0, 0, 0],\r\n    bidmax: 0,\r\n    askmax: 0,\r\n    tbq: 0,\r\n    tsq: 0,\r\n    upperCircuit: \"NA\",\r\n    lowerCircuit: \"NA\",\r\n    volume: \"NA\",\r\n    atp: 0.0,\r\n    openPrice: 0.0,\r\n    highPrice: 0.0,\r\n    lowPrice: 0.0,\r\n    closePrice: 0.0,\r\n    change: 0.0,\r\n    lltp: 0.0,\r\n    ltp: 0.0,\r\n  });\r\n  socket.subscribe(context.ws, [[scrip.exchange_code, scrip.code]], \"1\");\r\n  socket.subscribe(context.ws, [[scrip.exchange_code, scrip.code]], \"3\");\r\n  localStorage.setItem(\r\n    \"currentFullScrip\",\r\n    JSON.stringify({\r\n      actionData: [scrip.exchange_code, scrip.code],\r\n      symbol: scrip.symbol,\r\n      exchange: scrip.exchange,\r\n    })\r\n  );\r\n};\r\n\r\nexport const addCompactScrip = (hits, context, ws) => {\r\n  let scrip = hits;\r\n  let compactDataList = [...context.compactDataList];\r\n  let instruments = [...context.instruments];\r\n  let data = {\r\n    exchangeCode: scrip.exchange_code,\r\n    exchange: scrip.exchange,\r\n    symbol: scrip.symbol,\r\n    token: scrip.code,\r\n    ltp: 0.0,\r\n    lltp: 0.0,\r\n    change: 0.0,\r\n  };\r\n  instruments.push(data);\r\n  compactDataList.push(scrip.code);\r\n  context.updateData({\r\n    instruments,\r\n    compactDataList,\r\n  });\r\n  localStorage.setItem(\"compactDataList\", JSON.stringify(compactDataList));\r\n  instruments = JSON.parse(localStorage.getItem(\"instruments\"));\r\n  if (instruments) {\r\n    instruments.push({\r\n      exchangeCode: scrip.exchange_code,\r\n      exchange: scrip.exchange,\r\n      symbol: scrip.symbol,\r\n      token: scrip.code,\r\n    });\r\n  } else {\r\n    instruments = [];\r\n    instruments.push({\r\n      exchangeCode: scrip.exchange_code,\r\n      exchange: scrip.exchange,\r\n      symbol: scrip.symbol,\r\n      token: scrip.code,\r\n    });\r\n  }\r\n  localStorage.setItem(\"instruments\", JSON.stringify(instruments));\r\n  socket.subscribe(ws, [[scrip.exchange_code, scrip.code]], \"2\");\r\n};\r\n\r\nexport const removeCompactScrip = (hits, context, ws) => {\r\n  let scrip = hits;\r\n  let compactDataList = [...context.compactDataList];\r\n  let instruments = [...context.instruments];\r\n  let index = compactDataList.indexOf(scrip.code);\r\n  socket.unsubscribe(ws, [[scrip.exchange_code, scrip.code]], \"2\");\r\n  if (index > -1) {\r\n    compactDataList.splice(index, 1);\r\n    instruments.splice(index, 1);\r\n  }\r\n  context.updateData({\r\n    instruments,\r\n    compactDataList,\r\n  });\r\n  instruments = JSON.parse(localStorage.getItem(\"instruments\"));\r\n  if (instruments) {\r\n    instruments.splice(index, 1);\r\n    localStorage.setItem(\"instruments\", JSON.stringify(instruments));\r\n  }\r\n  localStorage.setItem(\"compactDataList\", JSON.stringify(compactDataList));\r\n};\r\n\r\nexport default {\r\n  removeFullScrip,\r\n  addFullScrip,\r\n  removeCompactScrip,\r\n  addCompactScrip,\r\n};\r\n","import React, { PureComponent } from \"react\";\r\nimport \"../css/InstrumentList.css\";\r\nimport \"../css/DataChange.css\";\r\nimport {\r\n  IoIosArrowRoundForward,\r\n  IoIosArrowRoundBack,\r\n  IoIosAdd,\r\n  IoIosClose,\r\n} from \"react-icons/io\";\r\nimport { FiArrowUpRight, FiArrowDownRight } from \"react-icons/fi\";\r\nimport { CompactDataContext } from \"../context/CompactDataContext\";\r\nimport { MarketDataContext } from \"../context/MarketDataContext\";\r\nimport {\r\n  removeCompactScrip,\r\n  addFullScrip,\r\n} from \"../scripfunctions/scripfunction\";\r\n\r\nexport default class InstrumentList extends PureComponent {\r\n  static contextType = CompactDataContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.scroll = React.createRef();\r\n  }\r\n\r\n  checkTrendDirection = (index) => {\r\n    return index.ltp >= index.close ? (\r\n      <FiArrowUpRight className=\"up\" />\r\n    ) : (\r\n      <FiArrowDownRight className=\"down\" />\r\n    );\r\n  };\r\n\r\n  scrollRight = () => {\r\n    if (this.scroll.current) {\r\n      this.scroll.current.scrollLeft += 340;\r\n    }\r\n  };\r\n\r\n  scrollLeft = () => {\r\n    if (this.scroll.current) {\r\n      this.scroll.current.scrollLeft -= 340;\r\n    }\r\n  };\r\n\r\n  openModal = (i) => {\r\n    this.props.openModal(i);\r\n  };\r\n\r\n  removeScrip = (value, index) => {\r\n    let instruments = [...this.context.instruments];\r\n    let hits = {};\r\n    hits.exchange_code = instruments[index].exchangeCode;\r\n    hits.code = instruments[index].token;\r\n    removeCompactScrip(hits, this.context, value.ws);\r\n  };\r\n\r\n  moveScrip = (value, index) => {\r\n    let hits = {};\r\n    hits.exchange_code = this.context.instruments[index].exchangeCode;\r\n    hits.code = this.context.instruments[index].token;\r\n    hits.symbol = this.context.instruments[index].symbol;\r\n    hits.exchange = this.context.instruments[index].exchange;\r\n    this.removeScrip(value, index);\r\n    addFullScrip(hits, value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <MarketDataContext.Consumer>\r\n        {(value) => {\r\n          let insdivs = [];\r\n          for (let i = 0; i < this.context.instruments.length; i++) {\r\n            let trend =\r\n              this.context.instruments[i].change >= 0 ? (\r\n                <FiArrowUpRight className=\"up\" />\r\n              ) : (\r\n                <FiArrowDownRight className=\"down\" />\r\n              );\r\n            let changeSign = Math.sign(\r\n              this.context.instruments[i].ltp - this.context.instruments[i].lltp\r\n            ).toString();\r\n            insdivs.push(\r\n              <div\r\n                className=\"instrument\"\r\n                key={i}\r\n                onDoubleClick={() => this.moveScrip(value, i)}\r\n              >\r\n                <div className=\"scripaction\">\r\n                  <IoIosClose\r\n                    className=\"removesign\"\r\n                    onClick={() => this.removeScrip(value, i)}\r\n                  />\r\n                </div>\r\n                <p className=\"index\">{this.context.instruments[i].symbol}</p>\r\n                <small className=\"exch\">\r\n                  {this.context.instruments[i].exchange}\r\n                </small>\r\n                <div className=\"tick\">\r\n                  <p className=\"point\" data-change={changeSign}>\r\n                    {this.context.instruments[i].ltp}\r\n                  </p>\r\n                  <p className=\"change\">\r\n                    ({this.context.instruments[i].change} {trend})\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n          return (\r\n            <div className=\"instrumentlist\">\r\n              <div className=\"controller\">\r\n                <IoIosArrowRoundBack\r\n                  className=\"arrow\"\r\n                  onClick={this.scrollLeft}\r\n                />\r\n                <IoIosArrowRoundForward\r\n                  className=\"arrow\"\r\n                  onClick={this.scrollRight}\r\n                />\r\n              </div>\r\n              <div className=\"instrumentcards\" ref={this.scroll}>\r\n                {insdivs}\r\n                <div\r\n                  className=\"addScripButton\"\r\n                  onClick={() => this.openModal(\"1\")}\r\n                >\r\n                  <IoIosAdd className=\"addbtn\" />\r\n                </div>\r\n                &nbsp;\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </MarketDataContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"../css/InstrumentData.css\";\r\nimport { MarketDataContext } from \"../context/MarketDataContext\";\r\n\r\nexport default class Depth extends Component {\r\n  static contextType = MarketDataContext;\r\n\r\n  render() {\r\n    let divs = [];\r\n    var bidpercent,\r\n      askpercent = 0;\r\n    for (let i = 0; i < 5; i++) {\r\n      askpercent = (this.context.topAskQty[i] / this.context.askmax) * 80;\r\n\r\n      bidpercent = (this.context.topBidQty[i] / this.context.bidmax) * 80;\r\n\r\n      divs.push(\r\n        <div className=\"row\" key={i}>\r\n          <div\r\n            className=\"block qtybar lp\"\r\n            style={{\r\n              background:\r\n                \"linear-gradient(to left, #d8f0d1 \" +\r\n                bidpercent +\r\n                \"%, #ffffff00 0%)\",\r\n            }}\r\n          >\r\n            <p className=\"value qty\">{this.context.topBidQty[i]}</p>\r\n            <p className=\"value lv\">{this.context.topBidPrice[i]}</p>\r\n          </div>\r\n          <div\r\n            className=\"block qtybar rp\"\r\n            style={{\r\n              background:\r\n                \"linear-gradient(to right, #f0d1d1 \" +\r\n                askpercent +\r\n                \"%, #ffffff00 0%)\",\r\n            }}\r\n          >\r\n            <p className=\"value rv\">{this.context.topAskPrice[i]}</p>\r\n            <p className=\"value qty\">{this.context.topAskQty[i]}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"details depth\">\r\n        <div className=\"row\">\r\n          <div className=\"block\">\r\n            <p className=\"title\">Quantity</p>\r\n            <p className=\"value bid\">Bid</p>\r\n          </div>\r\n          <div className=\"block\">\r\n            <p className=\"value ask\">Ask</p>\r\n            <p className=\"title\">Quantity</p>\r\n          </div>\r\n        </div>\r\n\r\n        {divs}\r\n\r\n        <div className=\"row\">\r\n          <div className=\"block\">\r\n            <p className=\"value bid\">{this.context.tbq}</p>\r\n            <p className=\"value bid\">TBQ</p>\r\n          </div>\r\n          <div className=\"block\">\r\n            <p className=\"value ask\">TSQ</p>\r\n            <p className=\"value ask\">{this.context.tsq}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport \"../css/InstrumentData.css\";\r\nimport Depth from \"./Depth\";\r\nimport { MarketDataContext } from \"../context/MarketDataContext\";\r\n\r\nexport default class InstrumentData extends PureComponent {\r\n  static contextType = MarketDataContext;\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"instrumentdata\">\r\n        <Depth />\r\n        <div className=\"details\">\r\n          <div className=\"row\">\r\n            <div className=\"block\">\r\n              <p className=\"key\">Volume</p>\r\n              <p className=\"value lv\">{this.context.volume}</p>\r\n            </div>\r\n            <div className=\"block\">\r\n              <p className=\"key rv\">Open</p>\r\n              <p className=\"value\">{this.context.openPrice}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"block\">\r\n              <p className=\"key\">Upper Circuit</p>\r\n              <p className=\"value lv\">{this.context.upperCircuit}</p>\r\n            </div>\r\n            <div className=\"block\">\r\n              <p className=\"key rv\">High</p>\r\n              <p className=\"value\">{this.context.highPrice}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"block\">\r\n              <p className=\"key\">Lower Circuit</p>\r\n              <p className=\"value lv\">{this.context.lowerCircuit}</p>\r\n            </div>\r\n            <div className=\"block\">\r\n              <p className=\"key rv\">Low</p>\r\n              <p className=\"value\">{this.context.lowPrice}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"block\">\r\n              <p className=\"key\">ATP</p>\r\n              <p className=\"value lv\">{this.context.atp}</p>\r\n            </div>\r\n            <div className=\"block\">\r\n              <p className=\"key rv\">Close</p>\r\n              <p className=\"value\">{this.context.closePrice}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const axios = require(\"axios\").default;\r\nconst base_url = process.env.REACT_APP_BASE_URL;\r\nconst login_url = process.env.REACT_APP_BACKEND_URL + \"login\";\r\n\r\nexport const getScripInfo = (exchange, instrumentToken, user_token) => {\r\n  const url = `${base_url}scripinfo?exchange=${exchange}&instrument_token=${instrumentToken}`;\r\n  axios({\r\n    method: \"get\",\r\n    url: url,\r\n    headers: {\r\n      Authorization: \"Bearer \" + user_token,\r\n    },\r\n  })\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport const cancelOrder = (orderid, user_token) => {\r\n  const url = `${base_url}order?oms_order_id=${orderid}&order_status=open`;\r\n  return new Promise((resolve, reject) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: url,\r\n      headers: {\r\n        Authorization: \"Bearer \" + user_token,\r\n      },\r\n    })\r\n      .then(function (response) {\r\n        resolve(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const modifyOrder = (\r\n  orderid,\r\n  instrument_token,\r\n  exchange,\r\n  transaction_type,\r\n  product,\r\n  validity,\r\n  order_type,\r\n  price,\r\n  trigger_price,\r\n  quantity,\r\n  user_token\r\n) => {\r\n  const url = `${base_url}order`;\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .put(\r\n        url,\r\n        {\r\n          oms_order_id: orderid,\r\n          instrument_token: instrument_token,\r\n          exchange: exchange,\r\n          transaction_type: transaction_type,\r\n          product: product,\r\n          validity: validity,\r\n          order_type: order_type,\r\n          price: price,\r\n          trigger_price: trigger_price,\r\n          quantity: quantity,\r\n          disclosed_quantity: 0,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + user_token,\r\n          },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        resolve(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const getOrderBook = (user_token) => {\r\n  const url = `${base_url}order`;\r\n  return new Promise((resolve, reject) => {\r\n    axios({\r\n      method: \"get\",\r\n      url: url,\r\n      headers: {\r\n        Authorization: \"Bearer \" + user_token,\r\n      },\r\n    })\r\n      .then(function (response) {\r\n        resolve(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const getTradeBook = (user_token) => {\r\n  const url = `${base_url}trade`;\r\n  return new Promise((resolve, reject) => {\r\n    axios({\r\n      method: \"get\",\r\n      url: url,\r\n      headers: {\r\n        Authorization: \"Bearer \" + user_token,\r\n      },\r\n    })\r\n      .then(function (response) {\r\n        resolve(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const placeOrder = (\r\n  user_token,\r\n  exchange,\r\n  order_type,\r\n  instrument_token,\r\n  quantity,\r\n  disclosed_quantity,\r\n  price,\r\n  transaction_type,\r\n  trigger_price,\r\n  validity,\r\n  product,\r\n  order_tag\r\n) => {\r\n  const url = `${base_url}order`;\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(\r\n        url,\r\n        {\r\n          exchange: exchange,\r\n          order_type: order_type,\r\n          instrument_token: instrument_token,\r\n          quantity: quantity,\r\n          disclosed_quantity: disclosed_quantity,\r\n          price: price,\r\n          transaction_type: transaction_type,\r\n          trigger_price: trigger_price,\r\n          validity: validity,\r\n          product: product,\r\n          source: \"web\",\r\n          order_tag: order_tag,\r\n        },\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: \"Bearer \" + user_token,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        resolve(response.data);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const placeBracketOrder = (\r\n  user_token,\r\n  exchange,\r\n  order_type,\r\n  instrument_token,\r\n  quantity,\r\n  disclosed_quantity,\r\n  square_off_value,\r\n  stop_loss_value,\r\n  price,\r\n  trailing_stop_loss,\r\n  transaction_type,\r\n  trigger_price,\r\n  validity,\r\n  product,\r\n  order_tag\r\n) => {\r\n  const url = `${base_url}bracketorder`;\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(\r\n        url,\r\n        {\r\n          exchange: exchange,\r\n          order_type: order_type,\r\n          instrument_token: instrument_token,\r\n          quantity: quantity,\r\n          disclosed_quantity: disclosed_quantity,\r\n          square_off_value: square_off_value,\r\n          stop_loss_value: stop_loss_value,\r\n          price: price,\r\n          transaction_type: transaction_type,\r\n          trigger_price: trigger_price,\r\n          trailing_stop_loss: trailing_stop_loss,\r\n          validity: validity,\r\n          product: product,\r\n          source: \"web\",\r\n          order_tag: order_tag,\r\n        },\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: \"Bearer \" + user_token,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        resolve(response.data);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const login = (client_id, client_secret, password, twofa) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(\r\n        login_url,\r\n        {\r\n          client_id: client_id,\r\n          client_secret: client_secret,\r\n          password: password,\r\n          twofa: twofa,\r\n        },\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        resolve(response.data);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const placeAmoOrder = (\r\n  user_token,\r\n  exchange,\r\n  order_type,\r\n  instrument_token,\r\n  quantity,\r\n  disclosed_quantity,\r\n  price,\r\n  transaction_type,\r\n  trigger_price,\r\n  validity,\r\n  product,\r\n  order_tag\r\n) => {\r\n  const url = `${base_url}amo`;\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(\r\n        url,\r\n        {\r\n          exchange: exchange,\r\n          order_type: order_type,\r\n          instrument_token: instrument_token,\r\n          quantity: quantity,\r\n          disclosed_quantity: disclosed_quantity,\r\n          price: price,\r\n          transaction_type: transaction_type,\r\n          trigger_price: trigger_price,\r\n          validity: validity,\r\n          product: product,\r\n          source: \"web\",\r\n          order_tag: order_tag,\r\n        },\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: \"Bearer \" + user_token,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        resolve(response.data);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport default {\r\n  getScripInfo,\r\n  login,\r\n  placeOrder,\r\n  placeBracketOrder,\r\n  getOrderBook,\r\n  getTradeBook,\r\n  cancelOrder,\r\n  modifyOrder,\r\n  placeAmoOrder,\r\n};\r\n","import React, { PureComponent } from \"react\";\r\nimport \"../css/OrderForm.css\";\r\nimport \"../css/ToggleSwitch.css\";\r\nimport { FiArrowUpRight, FiArrowDownRight } from \"react-icons/fi\";\r\nimport { MarketDataContext } from \"../context/MarketDataContext\";\r\nimport {\r\n  placeOrder,\r\n  placeBracketOrder,\r\n  placeAmoOrder,\r\n} from \"../api_calls/api_functions\";\r\nimport { Firebase } from \"../config/firebase\";\r\n\r\nconst db = Firebase.firestore();\r\n\r\nexport default class OrderForm extends PureComponent {\r\n  static contextType = MarketDataContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      orderSide: \"BUY\",\r\n      buySideClass: \"buy\",\r\n      sellSideClass: \"\",\r\n      trailingsl: 0,\r\n      orderperac: 1,\r\n      price: 0,\r\n      quantity: 1,\r\n      disclosedquantity: 0,\r\n      triggerprice: 0,\r\n      target: 0,\r\n      stoploss: 0,\r\n      complexity: \"SIMPLE\",\r\n      ordertype: \"MARKET\",\r\n      position: \"CNC\",\r\n      validity: \"DAY\",\r\n    };\r\n  }\r\n\r\n  updateNotificationList = (obj) => {\r\n    var notificationlist = [...this.context.notification];\r\n    notificationlist.push(obj);\r\n    this.context.updateData({\r\n      notification: notificationlist,\r\n    });\r\n  };\r\n\r\n  updateOrdersToDB = (col, doc, obj) => {\r\n    db.collection(col)\r\n      .doc(doc)\r\n      .set(obj, { merge: true })\r\n      .then(function () {\r\n        console.log(\"Document successfully written!\");\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"Error writing document: \", error);\r\n      });\r\n  };\r\n\r\n  placeOrder = () => {\r\n    var d = new Date();\r\n    var doc = `${d.getFullYear()}_${d.getMonth() + 1}_${d.getDate()}`;\r\n    var allOrderId = `${Date.now()}`;\r\n\r\n    var clientsList = { ...this.context.clientsList };\r\n    var activeClients = [...this.context.activeClients];\r\n\r\n    var instrument_token = this.context.orderInstrumentToken;\r\n    var exchange = this.context.exchange;\r\n    var symbol = this.context.symbol;\r\n\r\n    var fixedto = this.context.exchangeCode === \"3\" ? 4 : 2;\r\n    var transaction_type = this.state.orderSide.toUpperCase();\r\n    var order_type = this.state.ordertype.toUpperCase();\r\n    var trailing_stop_loss = parseFloat(this.state.trailingsl).toFixed(fixedto);\r\n    var stop_loss_value = parseFloat(this.state.stoploss).toFixed(fixedto);\r\n    var orderPerAccount = parseInt(this.state.orderperac);\r\n    var price = parseFloat(this.state.price).toFixed(fixedto);\r\n    var quantity = parseInt(this.state.quantity);\r\n    var disclosed_quantity = parseInt(this.state.disclosedquantity);\r\n    var trigger_price = parseFloat(this.state.triggerprice).toFixed(fixedto);\r\n    var square_off_value = parseFloat(this.state.target).toFixed(fixedto);\r\n    var product = this.state.position.toUpperCase();\r\n    var validity = this.state.validity.toUpperCase();\r\n    var complexity = this.state.complexity.toUpperCase();\r\n\r\n    var userToken = \"\";\r\n    var order_tag = allOrderId;\r\n\r\n    var dbObj = {};\r\n    var orderObj = {};\r\n    orderObj.token = instrument_token;\r\n    orderObj.symbol = symbol;\r\n    orderObj.exchange = exchange;\r\n    orderObj.side = transaction_type;\r\n    orderObj.quantity = quantity;\r\n    orderObj.price = price;\r\n    orderObj.product = product;\r\n    orderObj.triggerprice = trigger_price;\r\n    orderObj.validity = validity;\r\n    orderObj.order_type = order_type;\r\n\r\n    switch (order_type) {\r\n      case \"MARKET\":\r\n        price = 0;\r\n        trigger_price = 0;\r\n        break;\r\n      case \"LIMIT\":\r\n        trigger_price = 0;\r\n        break;\r\n      case \"SLM\":\r\n        price = 0;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (complexity === \"SIMPLE\") {\r\n      for (let i = 0; i < activeClients.length; i++) {\r\n        userToken = clientsList[activeClients[i]];\r\n        let arr = [];\r\n        for (let c = 0; c < orderPerAccount; c++) {\r\n          placeOrder(\r\n            userToken,\r\n            exchange,\r\n            order_type,\r\n            instrument_token,\r\n            quantity,\r\n            disclosed_quantity,\r\n            price,\r\n            transaction_type,\r\n            trigger_price,\r\n            validity,\r\n            product,\r\n            order_tag\r\n          )\r\n            .then((data) => {\r\n              if (data.status === \"success\") {\r\n                arr.push(data.data[\"oms_order_id\"]);\r\n                dbObj[activeClients[i]] = arr;\r\n                this.updateOrdersToDB(\"allorder\", doc, {\r\n                  [allOrderId]: dbObj,\r\n                });\r\n                this.props.updateNotification(\r\n                  {\r\n                    type: \"success\",\r\n                    message: `${activeClients[i]} : ${symbol} : ${data.message}`,\r\n                  },\r\n                  true\r\n                );\r\n                this.updateNotificationList({\r\n                  type: \"success\",\r\n                  message: `${activeClients[i]} : ${symbol} :  ${data.message}`,\r\n                  time: allOrderId,\r\n                });\r\n              } else {\r\n                this.props.updateNotification(\r\n                  {\r\n                    type: \"error\",\r\n                    message: `${activeClients[i]} : ${symbol} :  Error in placing order`,\r\n                  },\r\n                  true\r\n                );\r\n                this.updateNotificationList({\r\n                  type: \"error\",\r\n                  message: `${activeClients[i]} : ${symbol} :  Error in placing order`,\r\n                  time: allOrderId,\r\n                });\r\n              }\r\n            })\r\n            .catch((e) => {\r\n              this.props.updateNotification(\r\n                {\r\n                  type: \"error\",\r\n                  message: `${activeClients[i]} : ${symbol} :  ${e}`,\r\n                },\r\n                true\r\n              );\r\n              this.updateNotificationList({\r\n                type: \"error\",\r\n                message: `${activeClients[i]} : ${symbol} :  ${e}`,\r\n                time: allOrderId,\r\n              });\r\n            });\r\n        }\r\n      }\r\n    } else if (complexity === \"CO\") {\r\n      for (let i = 0; i < activeClients.length; i++) {\r\n        userToken = clientsList[activeClients[i]];\r\n        let arr = [];\r\n        for (let c = 0; c < orderPerAccount; c++) {\r\n          placeOrder(\r\n            userToken,\r\n            exchange,\r\n            order_type,\r\n            instrument_token,\r\n            quantity,\r\n            disclosed_quantity,\r\n            price,\r\n            transaction_type,\r\n            stop_loss_value,\r\n            validity,\r\n            complexity,\r\n            order_tag\r\n          )\r\n            .then((data) => {\r\n              if (data.status === \"success\") {\r\n                arr.push(data.data);\r\n                dbObj[activeClients[i]] = arr;\r\n                this.updateOrdersToDB(\"allorder\", doc, {\r\n                  [allOrderId]: dbObj,\r\n                });\r\n                this.props.updateNotification(\r\n                  {\r\n                    type: \"success\",\r\n                    message: `${activeClients[i]} : ${symbol} :  ${data.message}`,\r\n                  },\r\n                  true\r\n                );\r\n                this.updateNotificationList({\r\n                  type: \"success\",\r\n                  message: `${activeClients[i]} : ${symbol} :  ${data.message}`,\r\n                  time: allOrderId,\r\n                });\r\n              } else {\r\n                this.props.updateNotification(\r\n                  {\r\n                    type: \"error\",\r\n                    message: `${activeClients[i]} : ${symbol} :  Error in placing order`,\r\n                  },\r\n                  true\r\n                );\r\n                this.updateNotificationList({\r\n                  type: \"error\",\r\n                  message: `${activeClients[i]} : ${symbol} :  Error in placing order`,\r\n                  time: allOrderId,\r\n                });\r\n              }\r\n            })\r\n            .catch((e) => {\r\n              this.props.updateNotification(\r\n                {\r\n                  type: \"error\",\r\n                  message: `${activeClients[i]} : ${symbol} :  ${e}`,\r\n                },\r\n                true\r\n              );\r\n              this.updateNotificationList({\r\n                type: \"error\",\r\n                message: `${activeClients[i]} : ${symbol} :  ${e}`,\r\n                time: allOrderId,\r\n              });\r\n            });\r\n        }\r\n      }\r\n    } else if (complexity === \"BO\") {\r\n      for (let i = 0; i < activeClients.length; i++) {\r\n        userToken = clientsList[activeClients[i]];\r\n        let arr = [];\r\n        for (let c = 0; c < orderPerAccount; c++) {\r\n          placeBracketOrder(\r\n            userToken,\r\n            exchange,\r\n            order_type,\r\n            instrument_token,\r\n            quantity,\r\n            disclosed_quantity,\r\n            square_off_value,\r\n            stop_loss_value,\r\n            price,\r\n            trailing_stop_loss,\r\n            transaction_type,\r\n            trigger_price,\r\n            validity,\r\n            product,\r\n            order_tag\r\n          )\r\n            .then((data) => {\r\n              if (data.status === \"success\") {\r\n                arr.push(data.data);\r\n                dbObj[activeClients[i]] = arr;\r\n                this.updateOrdersToDB(\"allorder\", doc, {\r\n                  [allOrderId]: dbObj,\r\n                });\r\n                this.props.updateNotification(\r\n                  {\r\n                    type: \"success\",\r\n                    message: `${activeClients[i]} : ${symbol} :  ${data.message}`,\r\n                  },\r\n                  true\r\n                );\r\n                this.updateNotificationList({\r\n                  type: \"success\",\r\n                  message: `${activeClients[i]} : ${symbol} :  ${data.message}`,\r\n                  time: allOrderId,\r\n                });\r\n              } else {\r\n                this.props.updateNotification(\r\n                  {\r\n                    type: \"error\",\r\n                    message: `${activeClients[i]} : ${symbol} :  Error in placing order`,\r\n                  },\r\n                  true\r\n                );\r\n                this.updateNotificationList({\r\n                  type: \"error\",\r\n                  message: `${activeClients[i]} : ${symbol} :  Error in placing order`,\r\n                  time: allOrderId,\r\n                });\r\n              }\r\n            })\r\n            .catch((e) => {\r\n              this.props.updateNotification(\r\n                {\r\n                  type: \"error\",\r\n                  message: `${activeClients[i]} : ${symbol} :  ${e}`,\r\n                },\r\n                true\r\n              );\r\n              this.updateNotificationList({\r\n                type: \"error\",\r\n                message: `${activeClients[i]} : ${symbol} :  ${e}`,\r\n                time: allOrderId,\r\n              });\r\n            });\r\n        }\r\n      }\r\n    } else if (complexity === \"AMO\") {\r\n      for (let i = 0; i < activeClients.length; i++) {\r\n        userToken = clientsList[activeClients[i]];\r\n        let arr = [];\r\n        for (let c = 0; c < orderPerAccount; c++) {\r\n          placeAmoOrder(\r\n            userToken,\r\n            exchange,\r\n            order_type,\r\n            instrument_token,\r\n            quantity,\r\n            disclosed_quantity,\r\n            price,\r\n            transaction_type,\r\n            trigger_price,\r\n            validity,\r\n            product,\r\n            order_tag\r\n          )\r\n            .then((data) => {\r\n              if (data.status === \"success\") {\r\n                arr.push(data.data[\"oms_order_id\"]);\r\n                dbObj[activeClients[i]] = arr;\r\n                this.updateOrdersToDB(\"allorder\", doc, {\r\n                  [allOrderId]: dbObj,\r\n                });\r\n                this.props.updateNotification(\r\n                  {\r\n                    type: \"success\",\r\n                    message: `${activeClients[i]} : ${symbol} : ${data.message}`,\r\n                  },\r\n                  true\r\n                );\r\n                this.updateNotificationList({\r\n                  type: \"success\",\r\n                  message: `${activeClients[i]} : ${symbol} :  ${data.message}`,\r\n                  time: allOrderId,\r\n                });\r\n              } else {\r\n                this.props.updateNotification(\r\n                  {\r\n                    type: \"error\",\r\n                    message: `${activeClients[i]} : ${symbol} :  Error in placing order`,\r\n                  },\r\n                  true\r\n                );\r\n                this.updateNotificationList({\r\n                  type: \"error\",\r\n                  message: `${activeClients[i]} : ${symbol} :  Error in placing order`,\r\n                  time: allOrderId,\r\n                });\r\n              }\r\n            })\r\n            .catch((e) => {\r\n              this.props.updateNotification(\r\n                {\r\n                  type: \"error\",\r\n                  message: `${activeClients[i]} : ${symbol} :  ${e}`,\r\n                },\r\n                true\r\n              );\r\n              this.updateNotificationList({\r\n                type: \"error\",\r\n                message: `${activeClients[i]} : ${symbol} :  ${e}`,\r\n                time: allOrderId,\r\n              });\r\n            });\r\n        }\r\n      }\r\n    } else {\r\n      this.props.updateNotification(\r\n        {\r\n          type: \"error\",\r\n          message: `Fill up the required fields`,\r\n        },\r\n        true\r\n      );\r\n    }\r\n    this.updateOrdersToDB(\"orderscrip\", doc, {\r\n      [allOrderId]: orderObj,\r\n    });\r\n    this.setState({\r\n      trailingsl: 0,\r\n      orderperac: 1,\r\n      price: 0,\r\n      quantity: 1,\r\n      disclosedquantity: 0,\r\n      triggerprice: 0,\r\n      target: 0,\r\n      stoploss: 0,\r\n    });\r\n  };\r\n\r\n  orderSide = (e) => {\r\n    if (e.target.value === \"BUY\") {\r\n      this.setState({\r\n        orderSide: \"SELL\",\r\n        sellSideClass: \"sell\",\r\n        buySideClass: \"\",\r\n      });\r\n    } else if (e.target.value === \"SELL\") {\r\n      this.setState({\r\n        orderSide: \"BUY\",\r\n        buySideClass: \"buy\",\r\n        sellSideClass: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  updateFloatValue = (e) => {\r\n    if (Number(e.target.value) || e.target.value >= 0) {\r\n      this.setState({ [e.target.id]: e.target.value });\r\n      return;\r\n    }\r\n    if (e.target.value === \"\") {\r\n      this.setState({ [e.target.id]: \"\" });\r\n    }\r\n  };\r\n\r\n  updateIntValue = (e) => {\r\n    var value = parseFloat(e.target.value);\r\n    if (value) {\r\n      this.setState({ [e.target.id]: value });\r\n      return;\r\n    }\r\n    if (e.target.value === \"\") {\r\n      this.setState({ [e.target.id]: \"\" });\r\n    }\r\n  };\r\n\r\n  updateConditions = (e) => {\r\n    let id = e.target.id;\r\n    let val = e.target.value;\r\n    switch (id) {\r\n      case \"complexity\":\r\n        if (val === \"CO\") {\r\n          this.setState({\r\n            position: \"MIS\",\r\n            validity: \"DAY\",\r\n            ordertype: \"MARKET\",\r\n          });\r\n        }\r\n        if (val === \"BO\") {\r\n          this.setState({\r\n            position: \"MIS\",\r\n            validity: \"DAY\",\r\n            ordertype: \"LIMIT\",\r\n          });\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    let disablePrice =\r\n      this.state.ordertype === \"MARKET\" || this.state.ordertype === \"SLM\"\r\n        ? true\r\n        : false;\r\n    let disableStoploss =\r\n      this.state.complexity === \"CO\" || this.state.complexity === \"BO\"\r\n        ? false\r\n        : true;\r\n    let disablePosition =\r\n      this.state.complexity === \"CO\" || this.state.complexity === \"BO\"\r\n        ? true\r\n        : false;\r\n    let disableTriggerPrice =\r\n      this.state.ordertype === \"SLM\" || this.state.ordertype === \"SL\"\r\n        ? false\r\n        : true;\r\n    let disableTarget = this.state.complexity === \"BO\" ? false : true;\r\n    let changeSign = Math.sign(this.context.ltp - this.context.lltp).toString();\r\n    let trend =\r\n      this.context.change >= 0 ? (\r\n        <FiArrowUpRight className=\"up\" />\r\n      ) : (\r\n        <FiArrowDownRight className=\"down\" />\r\n      );\r\n\r\n    let position =\r\n      this.context.exchangeCode === \"1\" || this.context.exchangeCode === \"2\"\r\n        ? \"CNC\"\r\n        : \"NRML\";\r\n\r\n    return (\r\n      <div className=\"form\">\r\n        <div className=\"ticker\">\r\n          <p className=\"index\">\r\n            {this.context.symbol}{\" \"}\r\n            <small className=\"exch\">{this.context.exchange}</small>\r\n          </p>\r\n\r\n          <div className=\"tick\">\r\n            <p className=\"point\" data-change={changeSign}>\r\n              {this.context.ltp}\r\n            </p>\r\n            <p className=\"change\">\r\n              ({this.context.change} {trend})\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"orderform\">\r\n          <div className=\"topsection\">\r\n            <p className=\"title\">Order Entry</p>\r\n            <div className=\"orderside\">\r\n              <p className={\"title \" + this.state.buySideClass}>BUY</p>\r\n              <label className=\"switch\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value={this.state.orderSide}\r\n                  onChange={this.orderSide}\r\n                />\r\n                <span className=\"slider round\"></span>\r\n              </label>\r\n              <p className={\"title \" + this.state.sellSideClass}>SELL</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"conditions\">\r\n            <div className=\"box\">\r\n              <label className=\"label\">COMPLEXITY</label>\r\n              <select\r\n                className=\"select\"\r\n                id=\"complexity\"\r\n                onChange={this.updateConditions}\r\n                value={this.state.complexity}\r\n              >\r\n                <option value=\"SIMPLE\">SIMPLE</option>\r\n                <option value=\"CO\">CO</option>\r\n                <option value=\"BO\">BO</option>\r\n                <option value=\"AMO\">AMO</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"box\">\r\n              <label className=\"label\">ORDER TYPE</label>\r\n              <select\r\n                className=\"select\"\r\n                id=\"ordertype\"\r\n                onChange={this.updateConditions}\r\n                value={this.state.ordertype}\r\n              >\r\n                {this.state.complexity !== \"BO\" ? (\r\n                  <option value=\"MARKET\">MARKET</option>\r\n                ) : null}\r\n\r\n                <option value=\"LIMIT\">LIMIT</option>\r\n                {this.state.complexity === \"BO\" ||\r\n                this.state.complexity === \"AMO\" ||\r\n                this.state.complexity === \"SIMPLE\" ? (\r\n                  <option value=\"SL\">SL LIMIT</option>\r\n                ) : null}\r\n\r\n                {this.state.complexity !== \"CO\" &&\r\n                this.state.complexity !== \"BO\" ? (\r\n                  <option value=\"SLM\">SL MKT</option>\r\n                ) : null}\r\n              </select>\r\n            </div>\r\n            <div className=\"box\">\r\n              <label className=\"label\">POSITION</label>\r\n              <select\r\n                className=\"select\"\r\n                id=\"position\"\r\n                onChange={this.updateConditions}\r\n                disabled={disablePosition}\r\n                value={this.state.position}\r\n              >\r\n                {disablePosition ? null : (\r\n                  <option value={position}>{position}</option>\r\n                )}\r\n\r\n                <option value=\"MIS\">MIS</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"box\">\r\n              <label className=\"label\">VALIDITY</label>\r\n              <select\r\n                className=\"select\"\r\n                id=\"validity\"\r\n                onChange={this.updateConditions}\r\n                disabled={this.state.complexity === \"CO\" ? true : false}\r\n              >\r\n                <option value=\"DAY\">DAY</option>\r\n                <option value=\"IOC\">IOC</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"box\">\r\n              <label className=\"label\">ORDER PER A/C</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                id=\"orderperac\"\r\n                value={this.state.orderperac}\r\n                onChange={this.updateIntValue}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"orderdetails\">\r\n            <div className=\"block\">\r\n              <div className=\"box\">\r\n                <label className=\"label\">QUANTITY</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input\"\r\n                  id=\"quantity\"\r\n                  value={this.state.quantity}\r\n                  onChange={this.updateIntValue}\r\n                />\r\n              </div>\r\n              <div className=\"box\">\r\n                <label className=\"label\">STOP LOSS</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input\"\r\n                  id=\"stoploss\"\r\n                  value={this.state.stoploss}\r\n                  onChange={this.updateFloatValue}\r\n                  disabled={disableStoploss}\r\n                  placeholder={disableStoploss ? 0 : \"\"}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"block\">\r\n              <div className=\"box\">\r\n                <label className=\"label\">PRICE</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input\"\r\n                  id=\"price\"\r\n                  value={this.state.price}\r\n                  onChange={this.updateFloatValue}\r\n                  disabled={disablePrice}\r\n                  placeholder={disablePrice ? 0 : \"\"}\r\n                />\r\n              </div>\r\n              <div className=\"box\">\r\n                <label className=\"label\">TARGET</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input\"\r\n                  id=\"target\"\r\n                  value={this.state.target}\r\n                  onChange={this.updateFloatValue}\r\n                  disabled={disableTarget}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"block\">\r\n              <div className=\"box\">\r\n                <label className=\"label\">DISCLOSED QUANTITY</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input\"\r\n                  id=\"disclosedquantity\"\r\n                  value={this.state.disclosedquantity}\r\n                  onChange={this.updateIntValue}\r\n                />\r\n              </div>\r\n              <div className=\"box\">\r\n                <label className=\"label\">TRIGGER PRICE</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input\"\r\n                  id=\"triggerprice\"\r\n                  value={this.state.triggerprice}\r\n                  onChange={this.updateFloatValue}\r\n                  disabled={disableTriggerPrice}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"placeorder\">\r\n            <div className=\"box\">\r\n              <label className=\"label\">TRAILING SL</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                id=\"trailingsl\"\r\n                value={this.state.trailingsl}\r\n                onChange={this.updateFloatValue}\r\n                disabled={disableTarget}\r\n              />\r\n            </div>\r\n            <button\r\n              className={\"button box \" + this.state.orderSide}\r\n              onClick={this.placeOrder}\r\n            >\r\n              PLACE {this.state.orderSide} ORDER\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport \"../css/Clients.css\";\r\nimport \"../css/ToggleSwitch.css\";\r\nimport { MarketDataContext } from \"../context/MarketDataContext\";\r\n\r\nexport default class Clients extends PureComponent {\r\n  static contextType = MarketDataContext;\r\n\r\n  addToActiveList = (clientid) => {\r\n    let arr = [...this.context.activeClients];\r\n    if (!arr.includes(clientid)) {\r\n      arr.push(clientid);\r\n      this.context.updateData({\r\n        activeClients: arr,\r\n      });\r\n    }\r\n  };\r\n\r\n  removeFromActiveList = (clientid) => {\r\n    let arr = [...this.context.activeClients];\r\n    let i = arr.indexOf(clientid);\r\n    if (i > -1) {\r\n      arr.splice(i, 1);\r\n      this.context.updateData({\r\n        activeClients: arr,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let divs = [];\r\n    for (const clientid in this.context.clientsList) {\r\n      let val = this.context.activeClients.includes(clientid);\r\n      divs.push(\r\n        <div className=\"client\" key={clientid}>\r\n          <div className=\"clientid\">\r\n            <p>{clientid}</p>\r\n          </div>\r\n          <label className=\"switch\">\r\n            <input\r\n              type=\"checkbox\"\r\n              value={val}\r\n              onChange={\r\n                val\r\n                  ? () => this.removeFromActiveList(clientid)\r\n                  : () => this.addToActiveList(clientid)\r\n              }\r\n            />\r\n            <span className=\"slider round\"></span>\r\n          </label>\r\n        </div>\r\n      );\r\n    }\r\n    return <div className=\"clientslist\">{divs}</div>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"../css/InfoPanel.css\";\r\nimport InstrumentData from \"./InstrumentData\";\r\nimport OrderForm from \"./OrderForm\";\r\nimport Clients from \"./Clients\";\r\n\r\nexport const InfoPanel = (props) => {\r\n  return (\r\n    <div className=\"infopanel\">\r\n      <InstrumentData />\r\n      <OrderForm updateNotification={props.updateNotification} />\r\n      <Clients />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoPanel;\r\n","// For the default version\r\nimport algoliasearch from \"algoliasearch\";\r\nconst axios = require(\"axios\").default;\r\n\r\nconst client = algoliasearch(\"2RSMIQ81PE\", \"854bfa5ed0d1d25168d9ed4eb80396d0\");\r\nconst index = client.initIndex(\"test_trading\");\r\n\r\n// export const addData = () => {\r\n//   const url =\r\n//     \"https://ant.aliceblueonline.com/api/v2/contracts.json?exchanges=NSE\";\r\n//   axios({\r\n//     method: \"get\",\r\n//     url: url,\r\n//   })\r\n//     .then(function (response) {\r\n//       console.log(response);\r\n//       index\r\n//         .saveObjects(response.data.NSE, {\r\n//           autoGenerateObjectIDIfNotExist: true,\r\n//         })\r\n//         .then(({ objectIDs }) => {\r\n//           console.log(objectIDs);\r\n//         });\r\n//     })\r\n//     .catch(function (error) {\r\n//       console.log(error);\r\n//     });\r\n// };\r\n\r\nexport const fetchData = async (keywords) => {\r\n  var { hits } = await index.search(keywords, {\r\n    attributesToRetrieve: [\"symbol\", \"exchange_code\", \"exchange\", \"code\"],\r\n    hitsPerPage: 50,\r\n  });\r\n  return hits;\r\n};\r\n\r\nexport default {\r\n  //   addData,\r\n  fetchData,\r\n};\r\n","import React, { PureComponent } from \"react\";\r\nimport \"../css/Modal.css\";\r\nimport { fetchData } from \"../searchfunction/algolia\";\r\nimport { IoIosCloseCircle } from \"react-icons/io\";\r\nimport { MarketDataContext } from \"../context/MarketDataContext\";\r\nimport { CompactDataContext } from \"../context/CompactDataContext\";\r\nimport {\r\n  removeFullScrip,\r\n  removeCompactScrip,\r\n  addCompactScrip,\r\n  addFullScrip,\r\n} from \"../scripfunctions/scripfunction\";\r\n\r\nexport default class Modal extends PureComponent {\r\n  static contextType = MarketDataContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hits: [],\r\n      source: this.props.source,\r\n    };\r\n  }\r\n\r\n  fetchResult = async (e) => {\r\n    if (e.target.value.length >= 3) {\r\n      let hits = await fetchData(e.target.value);\r\n      this.setState({ hits });\r\n    }\r\n  };\r\n\r\n  addWhichScrip = (i, context, source) => {\r\n    if (source < 1) {\r\n      addFullScrip(this.state.hits[i], this.context);\r\n      this.props.closeModal();\r\n    } else {\r\n      addCompactScrip(this.state.hits[i], context, this.context.ws);\r\n    }\r\n  };\r\n\r\n  removeWhichScrip = (i, context) => {\r\n    if (context.compactDataList.includes(this.state.hits[i].code)) {\r\n      removeCompactScrip(this.state.hits[i], context, this.context.ws);\r\n    } else {\r\n      removeFullScrip(this.state.hits[i], this.context);\r\n    }\r\n    this.props.closeModal();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <CompactDataContext.Consumer>\r\n        {(value) => {\r\n          let result = [];\r\n          for (let i = 0; i < this.state.hits.length; i++) {\r\n            result.push(\r\n              <div className=\"block\" key={i}>\r\n                <div className=\"symbol\">\r\n                  <span className=\"exchange\">NSE</span>\r\n                  {this.state.hits[i].symbol}\r\n                </div>\r\n                {value.compactDataList.includes(this.state.hits[i].code) ||\r\n                this.context.orderInstrumentToken ===\r\n                  this.state.hits[i].code ? (\r\n                  <div\r\n                    className=\"action remove\"\r\n                    onClick={() => this.removeWhichScrip(i, value)}\r\n                  >\r\n                    REMOVE\r\n                  </div>\r\n                ) : (\r\n                  <div\r\n                    className=\"action add\"\r\n                    onClick={() =>\r\n                      this.addWhichScrip(i, value, this.state.source)\r\n                    }\r\n                  >\r\n                    ADD\r\n                  </div>\r\n                )}\r\n              </div>\r\n            );\r\n          }\r\n          return (\r\n            <div className=\"modal\">\r\n              <div className=\"close\" onClick={this.props.closeModal}>\r\n                <IoIosCloseCircle />\r\n              </div>\r\n              <div className=\"searchbar\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"searchbox\"\r\n                  placeholder=\"Enter at least 3 characters of symbol or name\"\r\n                  onChange={this.fetchResult}\r\n                  autoFocus\r\n                />\r\n              </div>\r\n              <div className=\"results\">{result}</div>\r\n            </div>\r\n          );\r\n        }}\r\n      </CompactDataContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"../css/AddClient.css\";\r\nimport { login } from \"../api_calls/api_functions\";\r\nimport { MarketDataContext } from \"../context/MarketDataContext\";\r\n\r\nexport default class AddClient extends Component {\r\n  static contextType = MarketDataContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      clientid: \"\",\r\n      password: \"\",\r\n      secretkey: \"\",\r\n      twofa: \"\",\r\n      logging: false,\r\n      error: false,\r\n      error_msg: \"\",\r\n      success: false,\r\n    };\r\n  }\r\n\r\n  closeAddClientModal = () => {\r\n    this.props.closeAddClientModal();\r\n  };\r\n\r\n  updateValue = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n      error: false,\r\n      success: false,\r\n    });\r\n  };\r\n\r\n  login = () => {\r\n    let data = {\r\n      clientid: this.state.clientid.trim(),\r\n      password: this.state.password.trim(),\r\n      secretkey: this.state.secretkey.trim(),\r\n      twofa: this.state.twofa.trim(),\r\n    };\r\n    if (data.clientid && data.password && data.secretkey && data.twofa) {\r\n      this.setState({ logging: true, error: false });\r\n      login(data.clientid, data.secretkey, data.password, data.twofa)\r\n        .then((response) => {\r\n          if (response.type === \"data\") {\r\n            localStorage.setItem(data.clientid, response.access_token);\r\n            let clientsList = { ...this.context.clientsList };\r\n            let activeClients = [...this.context.activeClients];\r\n            clientsList[data.clientid] = response.access_token;\r\n            if (!activeClients.includes(data.clientid)) {\r\n              activeClients.push(data.clientid);\r\n            }\r\n            this.context.updateData({\r\n              clientsList: clientsList,\r\n              activeClients: activeClients,\r\n            });\r\n            let clients = localStorage.getItem(\"clientslist\");\r\n            if (clients !== null) {\r\n              clients = JSON.parse(clients);\r\n              clients[data.clientid] = data;\r\n              localStorage.setItem(\"clientslist\", JSON.stringify(clients));\r\n            } else {\r\n              localStorage.setItem(\r\n                \"clientslist\",\r\n                JSON.stringify({ [data.clientid]: data })\r\n              );\r\n            }\r\n            this.setState({\r\n              success: true,\r\n              logging: false,\r\n              error: false,\r\n            });\r\n          } else if (response.type === \"error\") {\r\n            this.setState({\r\n              logging: false,\r\n              error: true,\r\n              error_msg: response.msg + \"!\",\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.setState({\r\n            logging: false,\r\n            error: true,\r\n            error_msg: \"Server not found!\",\r\n          });\r\n        });\r\n    } else {\r\n      this.setState({\r\n        logging: false,\r\n        error: true,\r\n        error_msg: \"All fields are required!\",\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"addclientmodal\">\r\n        <div className=\"form\">\r\n          <div className=\"account\">\r\n            <label htmlFor=\"clientid\" className=\"label\">\r\n              Client Id\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"input\"\r\n              id=\"clientid\"\r\n              onChange={this.updateValue}\r\n            />\r\n            <label htmlFor=\"password\" className=\"label\">\r\n              Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"input\"\r\n              id=\"password\"\r\n              onChange={this.updateValue}\r\n            />\r\n            <label htmlFor=\"secretkey\" className=\"label\">\r\n              Secret Key\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"input\"\r\n              id=\"secretkey\"\r\n              onChange={this.updateValue}\r\n            />\r\n            <label htmlFor=\"twofa\" className=\"label\">\r\n              Two FA\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"input\"\r\n              id=\"twofa\"\r\n              onChange={this.updateValue}\r\n            />\r\n          </div>\r\n          {this.state.error && !this.state.success ? (\r\n            <p className=\"error\">{this.state.error_msg}</p>\r\n          ) : null}\r\n          {!this.state.error && this.state.success ? (\r\n            <p className=\"success\">Success!</p>\r\n          ) : null}\r\n          <div className=\"actionbtn\">\r\n            <button\r\n              className=\"btn login\"\r\n              onClick={this.login}\r\n              disabled={this.state.logging}\r\n            >\r\n              {this.state.logging ? (\r\n                <div className=\"dotloader\">\r\n                  <div className=\"dot\"></div>\r\n                  <div className=\"dot\"></div>\r\n                  <div className=\"dot\"></div>\r\n                </div>\r\n              ) : (\r\n                \"LOGIN\"\r\n              )}\r\n            </button>\r\n            <button\r\n              className=\"btn cancel\"\r\n              onClick={this.closeAddClientModal}\r\n              disabled={this.state.logging}\r\n            >\r\n              CANCEL\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport \"../css/OrderBook.css\";\r\nimport { AiFillClockCircle } from \"react-icons/ai\";\r\nimport { BookContext } from \"../context/BookContext\";\r\nimport { cancelOrder, modifyOrder } from \"../api_calls/api_functions\";\r\n\r\nexport default class PendingOrder extends PureComponent {\r\n  static contextType = BookContext;\r\n  state = {\r\n    price: 0,\r\n    quantity: 0,\r\n    triggerprice: 0,\r\n    order_id: \"\",\r\n    transaction_type: \"BUY\",\r\n    symbol: \"\",\r\n    exchange: \"\",\r\n    instrument_token: \"\",\r\n    product: \"\",\r\n    order_type: \"\",\r\n    validity: \"\",\r\n    showModal: false,\r\n    client_token: \"\",\r\n  };\r\n\r\n  updateFloatValue = (e) => {\r\n    if (Number(e.target.value) || e.target.value >= 0) {\r\n      this.setState({ [e.target.id]: e.target.value });\r\n      return;\r\n    }\r\n    if (e.target.value === \"\") {\r\n      this.setState({ [e.target.id]: \"\" });\r\n    }\r\n  };\r\n\r\n  updateIntValue = (e) => {\r\n    var value = parseFloat(e.target.value);\r\n    if (value) {\r\n      this.setState({ [e.target.id]: value });\r\n      return;\r\n    }\r\n    if (e.target.value === \"\") {\r\n      this.setState({ [e.target.id]: \"\" });\r\n    }\r\n  };\r\n\r\n  orderAction = (i) => {\r\n    var order = this.context.pendingOrders[this.context.selectedId];\r\n    order = order[i];\r\n    this.setState({\r\n      price: order.price,\r\n      quantity: order.quantity,\r\n      triggerprice: order.trigger_price,\r\n      transaction_type: order.transaction_type,\r\n      order_id: order.oms_order_id,\r\n      exchange: order.exchange,\r\n      symbol: order.trading_symbol,\r\n      instrument_token: order.instrument_token,\r\n      product: order.product,\r\n      validity: order.validity,\r\n      order_type: order.order_type,\r\n      showModal: true,\r\n      client_token: this.context.client_token,\r\n    });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ showModal: false });\r\n  };\r\n\r\n  modifyOrder = () => {\r\n    modifyOrder(\r\n      this.state.order_id,\r\n      parseInt(this.state.instrument_token),\r\n      this.state.exchange,\r\n      this.state.transaction_type,\r\n      this.state.product,\r\n      this.state.validity,\r\n      this.state.order_type,\r\n      parseFloat(this.state.price),\r\n      parseFloat(this.state.triggerprice),\r\n      parseInt(this.state.quantity),\r\n      this.state.client_token\r\n    )\r\n      .then((data) => {\r\n        if (data.status === \"success\") {\r\n          this.props.updateNotification(\r\n            {\r\n              type: \"success\",\r\n              message: `${this.context.selectedId} : ${this.state.symbol} :  Modify order request placed successfully`,\r\n            },\r\n            true\r\n          );\r\n        }\r\n        console.log(data);\r\n      })\r\n      .catch((e) => {\r\n        this.props.updateNotification(\r\n          {\r\n            type: \"error\",\r\n            message: `${this.context.selectedId} : ${this.state.symbol} :  ${e}`,\r\n          },\r\n          true\r\n        );\r\n      });\r\n    this.setState({ showModal: false });\r\n  };\r\n\r\n  cancelOrder = () => {\r\n    cancelOrder(this.state.order_id, this.state.client_token)\r\n      .then((data) => {\r\n        if (data.status === \"success\") {\r\n          this.props.updateNotification(\r\n            {\r\n              type: \"success\",\r\n              message: `${this.context.selectedId} : ${this.state.symbol} :  Cancel order request placed successfully`,\r\n            },\r\n            true\r\n          );\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        this.props.updateNotification(\r\n          {\r\n            type: \"error\",\r\n            message: `${this.context.selectedId} : ${this.state.symbol} :  ${e}`,\r\n          },\r\n          true\r\n        );\r\n      });\r\n    this.setState({ showModal: false });\r\n  };\r\n\r\n  render() {\r\n    var divs = [];\r\n    var d = \"\";\r\n    var h,\r\n      m,\r\n      s = 0;\r\n    var pendingOrders = this.context.pendingOrders[this.context.selectedId];\r\n    if (pendingOrders) {\r\n      for (let i = 0; i < pendingOrders.length; i++) {\r\n        d = pendingOrders[i].order_entry_time;\r\n        if (d !== 0) {\r\n          d = new Date(d * 1000);\r\n          h = d.getHours();\r\n          h = h >= 0 && h < 10 ? \"0\" + h : h;\r\n          m = d.getMinutes();\r\n          m = m >= 0 && m < 10 ? \"0\" + m : m;\r\n          s = d.getSeconds();\r\n          s = s >= 0 && s < 10 ? \"0\" + s : s;\r\n          d = `${h}:${m}:${s}`;\r\n        }\r\n        divs.push(\r\n          <div\r\n            className=\"orderinfo orderdata\"\r\n            key={i}\r\n            onClick={() => this.orderAction(i)}\r\n          >\r\n            <div className=\"vals\">\r\n              <p>{pendingOrders[i].trading_symbol}</p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p className=\"exchg\">{pendingOrders[i].exchange}</p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p className={\"side \" + pendingOrders[i].transaction_type}>\r\n                {pendingOrders[i].transaction_type}\r\n              </p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p>\r\n                {pendingOrders[i].filled_quantity}/{pendingOrders[i].quantity}\r\n              </p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p>{pendingOrders[i].price}</p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p>{pendingOrders[i].product}</p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p>{pendingOrders[i].order_type}</p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p>{pendingOrders[i].trigger_price}</p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p className=\"pendingicon\">\r\n                <AiFillClockCircle />\r\n              </p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p>{d}</p>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"pendingorders\">\r\n        <div className=\"orderinfo orderinfoheading\">\r\n          <div className=\"vals\">\r\n            <p>SYMBOL</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>EXCH</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>SIDE</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>QUANTITY</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>PRICE</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>PRODUCT</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>ORDER TYPE</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>TRIGGER PRICE</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>STATUS</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>TIME</p>\r\n          </div>\r\n        </div>\r\n        {divs}\r\n        {this.state.showModal ? (\r\n          <div className=\"popup\">\r\n            <div className=\"topline\">\r\n              <div className=\"closebtn\" onClick={this.closeModal}>\r\n                X\r\n              </div>\r\n              <div className={\"symbol \" + this.state.transaction_type}>\r\n                {this.state.symbol}\r\n              </div>\r\n            </div>\r\n            <label htmlFor=\"price\" className=\"price\">\r\n              Price\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.price}\r\n              id=\"price\"\r\n              onChange={this.updateFloatValue}\r\n            />\r\n            <label htmlFor=\"quantity\" className=\"price\">\r\n              Quantity\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.quantity}\r\n              id=\"quantity\"\r\n              onChange={this.updateIntValue}\r\n            />\r\n            <label htmlFor=\"triggerprice\" className=\"price\">\r\n              Trigger Price\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.triggerprice}\r\n              id=\"triggerprice\"\r\n              onChange={this.updateFloatValue}\r\n            />\r\n            <button className=\"cancel\" onClick={this.cancelOrder}>\r\n              Cancel Order\r\n            </button>\r\n            <button className=\"modify\" onClick={this.modifyOrder}>\r\n              Modify Order\r\n            </button>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport \"../css/OrderBook.css\";\r\nimport { MdCheckCircle } from \"react-icons/md\";\r\nimport { IoIosCloseCircle } from \"react-icons/io\";\r\nimport { BookContext } from \"../context/BookContext\";\r\n\r\nexport default class CompletedOrder extends PureComponent {\r\n  static contextType = BookContext;\r\n  render() {\r\n    let divs = [];\r\n    let status = \"\",\r\n      d = \"\";\r\n    let h,\r\n      m,\r\n      s = 0;\r\n    let completedOrders = this.context.completedOrders[this.context.selectedId];\r\n    if (completedOrders) {\r\n      for (let i = 0; i < completedOrders.length; i++) {\r\n        status = completedOrders[i].order_status;\r\n        d = completedOrders[i].order_entry_time;\r\n        if (d !== 0) {\r\n          d = new Date(d * 1000);\r\n          h = d.getHours();\r\n          h = h >= 0 && h < 10 ? \"0\" + h : h;\r\n          m = d.getMinutes();\r\n          m = m >= 0 && m < 10 ? \"0\" + m : m;\r\n          s = d.getSeconds();\r\n          s = s >= 0 && s < 10 ? \"0\" + s : s;\r\n          d = `${h}:${m}:${s}`;\r\n        }\r\n        divs.push(\r\n          <div className=\"orderinfo orderdata\" key={i}>\r\n            <div className=\"vals\">\r\n              <p>{completedOrders[i].trading_symbol}</p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p className=\"exchg\">{completedOrders[i].exchange}</p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p className={\"side \" + completedOrders[i].transaction_type}>\r\n                {completedOrders[i].transaction_type}\r\n              </p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p>\r\n                {completedOrders[i].filled_quantity}/\r\n                {completedOrders[i].quantity}\r\n              </p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p>{completedOrders[i].price}</p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p>{completedOrders[i].product}</p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p>{completedOrders[i].order_type}</p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p>{completedOrders[i].trigger_price}</p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              {status === \"rejected\" ? (\r\n                <p className=\"rejectedicon\">\r\n                  <IoIosCloseCircle />\r\n                </p>\r\n              ) : (\r\n                <p className=\"completedicon\">\r\n                  <MdCheckCircle />\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p>{d}</p>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"pendingorders\">\r\n        <div className=\"orderinfo orderinfoheading\">\r\n          <div className=\"vals\">\r\n            <p>SYMBOL</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>EXCH</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>SIDE</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>QUANTITY</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>PRICE</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>PRODUCT</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>ORDER TYPE</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>TRIGGER PRICE</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>STATUS</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>TIME</p>\r\n          </div>\r\n        </div>\r\n        {divs}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport \"../css/OrderBook.css\";\r\nimport { BookContext } from \"../context/BookContext\";\r\n\r\nexport default class TradeBook extends PureComponent {\r\n  static contextType = BookContext;\r\n  render() {\r\n    let divs = [];\r\n    let d = \"\";\r\n    let h,\r\n      m,\r\n      s = 0;\r\n    let trades = this.context.trades[this.context.selectedId];\r\n    if (trades) {\r\n      for (let i = 0; i < trades.length; i++) {\r\n        d = trades[i].order_entry_time;\r\n        if (d !== 0) {\r\n          d = new Date(d * 1000);\r\n          h = d.getHours();\r\n          h = h >= 0 && h < 10 ? \"0\" + h : h;\r\n          m = d.getMinutes();\r\n          m = m >= 0 && m < 10 ? \"0\" + m : m;\r\n          s = d.getSeconds();\r\n          s = s >= 0 && s < 10 ? \"0\" + s : s;\r\n          d = `${h}:${m}:${s}`;\r\n        }\r\n        divs.push(\r\n          <div className=\"orderinfo orderdata\" key={i}>\r\n            <div className=\"vals\">\r\n              <p>{trades[i].trading_symbol}</p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p className=\"exchg\">{trades[i].exchange}</p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p className={\"side \" + trades[i].transaction_type}>\r\n                {trades[i].transaction_type}\r\n              </p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p>{trades[i].filled_quantity}</p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p>{trades[i].price}</p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p>{trades[i].product}</p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p>{d}</p>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"pendingorders trades\">\r\n        <div className=\"orderinfo orderinfoheading\">\r\n          <div className=\"vals\">\r\n            <p>SYMBOL</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>EXCH</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>SIDE</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>QUANTITY</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>PRICE</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>PRODUCT</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>TIME</p>\r\n          </div>\r\n        </div>\r\n        {divs}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"../css/ClientList.css\";\r\nimport { MarketDataContext } from \"../context/MarketDataContext\";\r\nimport { BookContext } from \"../context/BookContext\";\r\nimport { getOrderBook, getTradeBook } from \"../api_calls/api_functions\";\r\n\r\nexport default class ClientList extends Component {\r\n  static contextType = MarketDataContext;\r\n\r\n  state = {\r\n    selectedId: \"\",\r\n  };\r\n\r\n  idSelected = async (id, context) => {\r\n    let client_token = this.context.clientsList[id];\r\n    this.setState({ selectedId: id });\r\n    await context.updateData({ selectedId: id, client_token: client_token });\r\n    this.getOrderBook(context);\r\n    this.getTradeBook(context);\r\n  };\r\n\r\n  getOrderBook = (context) => {\r\n    let pendingOrders = { ...context.pendingOrders };\r\n    let completedOrders = { ...context.completedOrders };\r\n    getOrderBook(this.context.clientsList[this.state.selectedId])\r\n      .then((data) => {\r\n        if (data.status === \"success\") {\r\n          pendingOrders[this.state.selectedId] = data.data[\"pending_orders\"];\r\n          completedOrders[this.state.selectedId] =\r\n            data.data[\"completed_orders\"];\r\n          context.updateData({\r\n            pendingOrders,\r\n            completedOrders,\r\n          });\r\n        }\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n  getTradeBook = (context) => {\r\n    let trades = { ...context.trades };\r\n    getTradeBook(this.context.clientsList[this.state.selectedId])\r\n      .then((data) => {\r\n        if (data.status === \"success\") {\r\n          trades[this.state.selectedId] = data.data[\"trades\"];\r\n          context.updateData({\r\n            trades,\r\n          });\r\n        }\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <BookContext.Consumer>\r\n        {(value) => {\r\n          let clientIdDivs = [];\r\n          for (const id in this.context.clientsList) {\r\n            clientIdDivs.push(\r\n              <div\r\n                key={id}\r\n                className={\r\n                  this.state.selectedId === id || value.selectedId === id\r\n                    ? \"clientId ac\"\r\n                    : \"clientId\"\r\n                }\r\n                onClick={() => this.idSelected(id, value)}\r\n              >\r\n                {id}\r\n              </div>\r\n            );\r\n          }\r\n          return <div className=\"clientlist\">{clientIdDivs}</div>;\r\n        }}\r\n      </BookContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport \"../css/OrderBook.css\";\r\nimport PendingOrder from \"./PendingOrder\";\r\nimport CompletedOrder from \"./CompletedOrder\";\r\nimport TradeBook from \"./TradeBook\";\r\nimport ClientList from \"./ClientList\";\r\nimport { BookContext } from \"../context/BookContext\";\r\n\r\nexport default class OrderBook extends PureComponent {\r\n  static contextType = BookContext;\r\n  state = {\r\n    ordertypesection: \"0\",\r\n  };\r\n\r\n  changeOrderTypeSection = (type) => {\r\n    this.setState({ ordertypesection: type.target.id });\r\n  };\r\n\r\n  render() {\r\n    let section = [\r\n      <PendingOrder updateNotification={this.props.updateNotification} />,\r\n      <CompletedOrder />,\r\n      <TradeBook />,\r\n    ];\r\n    return (\r\n      <div className=\"orderbook\">\r\n        <ClientList />\r\n        <div className=\"headbar\">\r\n          <div className=\"ordertypes\">\r\n            <p\r\n              className={\r\n                this.state.ordertypesection === \"0\" ? \"text ul\" : \"text\"\r\n              }\r\n              onClick={this.changeOrderTypeSection}\r\n              id=\"0\"\r\n            >\r\n              Pending (\r\n              {this.context.pendingOrders[this.context.selectedId] !== undefined\r\n                ? this.context.pendingOrders[this.context.selectedId].length\r\n                : 0}\r\n              )\r\n            </p>\r\n            <p\r\n              className={\r\n                this.state.ordertypesection === \"1\" ? \"text ul\" : \"text\"\r\n              }\r\n              onClick={this.changeOrderTypeSection}\r\n              id=\"1\"\r\n            >\r\n              Completed (\r\n              {this.context.completedOrders[this.context.selectedId] !==\r\n              undefined\r\n                ? this.context.completedOrders[this.context.selectedId].length\r\n                : 0}\r\n              )\r\n            </p>\r\n            <p\r\n              className={\r\n                this.state.ordertypesection === \"2\" ? \"text ul\" : \"text\"\r\n              }\r\n              onClick={this.changeOrderTypeSection}\r\n              id=\"2\"\r\n            >\r\n              Trades (\r\n              {this.context.trades[this.context.selectedId] !== undefined\r\n                ? this.context.trades[this.context.selectedId].length\r\n                : 0}\r\n              )\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"ordertypesection\">\r\n          {section[this.state.ordertypesection]}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"../css/Notification.css\";\r\n\r\nexport default class Notification extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    setTimeout(() => {\r\n      props.updateNotification(\"\", false);\r\n    }, 2500);\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"notifycard\">\r\n        <div className={\"notificationcard \" + this.props.notification.type}>\r\n          {this.props.notification.message}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { MarketDataContext } from \"../context/MarketDataContext\";\r\nimport \"../css/NotificationList.css\";\r\n\r\nexport default class NotificationList extends Component {\r\n  static contextType = MarketDataContext;\r\n  render() {\r\n    let divs = [];\r\n    let d,\r\n      h,\r\n      m,\r\n      s = \"\";\r\n    for (let i = 0; i < this.context.notification.length; i++) {\r\n      d = new Date(Number(this.context.notification[i].time));\r\n      h = d.getHours();\r\n      h = h >= 0 && h < 10 ? \"0\" + h : h;\r\n      m = d.getMinutes();\r\n      m = m >= 0 && m < 10 ? \"0\" + m : m;\r\n      s = d.getSeconds();\r\n      s = s >= 0 && s < 10 ? \"0\" + s : s;\r\n      d = `${h}:${m}:${s}`;\r\n      divs.push(\r\n        <p\r\n          className={\"notification \" + this.context.notification[i].type}\r\n          key={i}\r\n        >\r\n          {this.context.notification[i].message} <br />\r\n          <span className=\"time\">{d}</span>\r\n        </p>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"notificationlist\">\r\n        <p className=\"title\">NOTIFICATION</p>\r\n\r\n        {divs}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport \"../css/OrderBook.css\";\r\nimport { cancelOrder, modifyOrder } from \"../api_calls/api_functions\";\r\nimport { Firebase } from \"../config/firebase\";\r\n\r\nimport { MarketDataContext } from \"../context/MarketDataContext\";\r\n\r\nconst db = Firebase.firestore();\r\nvar d = new Date();\r\nvar doc = `${d.getFullYear()}_${d.getMonth() + 1}_${d.getDate()}`;\r\n\r\nexport default class AllOrder extends PureComponent {\r\n  static contextType = MarketDataContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      orderscrip: \"\",\r\n      allorder: \"\",\r\n      price: 0,\r\n      quantity: 0,\r\n      transaction_type: \"BUY\",\r\n      symbol: \"\",\r\n      showModal: false,\r\n      instrument_token: \"\",\r\n      triggerprice: 0,\r\n      ordernumber: \"\",\r\n      exchange: \"\",\r\n      product: \"\",\r\n      validity: \"\",\r\n      order_type: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    var allorderRef = db.collection(\"allorder\").doc(doc);\r\n    var orderscripRef = db.collection(\"orderscrip\").doc(doc);\r\n    var that = this;\r\n\r\n    allorderRef.onSnapshot(function (doc) {\r\n      that.setState({ allorder: doc.data() });\r\n    });\r\n\r\n    orderscripRef.onSnapshot(function (doc) {\r\n      that.setState({ orderscrip: doc.data() });\r\n    });\r\n  };\r\n\r\n  updateFloatValue = (e) => {\r\n    if (Number(e.target.value) || e.target.value >= 0) {\r\n      this.setState({ [e.target.id]: e.target.value });\r\n      return;\r\n    }\r\n    if (e.target.value === \"\") {\r\n      this.setState({ [e.target.id]: \"\" });\r\n    }\r\n  };\r\n\r\n  updateIntValue = (e) => {\r\n    var value = parseFloat(e.target.value);\r\n    if (value) {\r\n      this.setState({ [e.target.id]: value });\r\n      return;\r\n    }\r\n    if (e.target.value === \"\") {\r\n      this.setState({ [e.target.id]: \"\" });\r\n    }\r\n  };\r\n\r\n  orderAction = (orderid) => {\r\n    var order = this.state.orderscrip[orderid];\r\n    this.setState({\r\n      ordernumber: orderid,\r\n      price: order.price,\r\n      quantity: order.quantity,\r\n      transaction_type: order.side,\r\n      symbol: order.symbol,\r\n      showModal: true,\r\n      instrument_token: order.token,\r\n      triggerprice: order.triggerprice,\r\n      exchange: order.exchange,\r\n      product: order.product,\r\n      validity: order.validity,\r\n      order_type: order.order_type,\r\n    });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ showModal: false });\r\n  };\r\n\r\n  modifyOrder = () => {\r\n    let orderObj = this.state.allorder[this.state.ordernumber];\r\n    for (const client in orderObj) {\r\n      let orders = orderObj[client];\r\n      let user_token = this.context.clientsList[client];\r\n      for (let i = 0; i < orders.length; i++) {\r\n        modifyOrder(\r\n          orders[i],\r\n          parseInt(this.state.instrument_token),\r\n          this.state.exchange,\r\n          this.state.transaction_type,\r\n          this.state.product,\r\n          this.state.validity,\r\n          this.state.order_type,\r\n          parseFloat(this.state.price),\r\n          parseFloat(this.state.triggerprice),\r\n          parseInt(this.state.quantity),\r\n          user_token\r\n        )\r\n          .then((data) => {\r\n            if (data.status === \"success\") {\r\n              this.props.updateNotification(\r\n                {\r\n                  type: \"success\",\r\n                  message: `${client} : ${this.state.symbol} :  Modify order request placed successfully`,\r\n                },\r\n                true\r\n              );\r\n            }\r\n            console.log(data);\r\n          })\r\n          .catch((e) => {\r\n            this.props.updateNotification(\r\n              {\r\n                type: \"error\",\r\n                message: `${client} : ${this.state.symbol} :  ${e}`,\r\n              },\r\n              true\r\n            );\r\n          });\r\n      }\r\n    }\r\n\r\n    this.setState({ showModal: false });\r\n  };\r\n\r\n  cancelOrder = () => {\r\n    let orderObj = this.state.allorder[this.state.ordernumber];\r\n    for (const client in orderObj) {\r\n      let orders = orderObj[client];\r\n      let user_token = this.context.clientsList[client];\r\n      for (let i = 0; i < orders.length; i++) {\r\n        cancelOrder(orders[i], user_token)\r\n          .then((data) => {\r\n            if (data.status === \"success\") {\r\n              this.props.updateNotification(\r\n                {\r\n                  type: \"success\",\r\n                  message: `${client} : ${this.state.symbol} :  Cancel order request placed successfully`,\r\n                },\r\n                true\r\n              );\r\n            }\r\n          })\r\n          .catch((e) => {\r\n            this.props.updateNotification(\r\n              {\r\n                type: \"error\",\r\n                message: `${client} : ${this.state.symbol} :  ${e}`,\r\n              },\r\n              true\r\n            );\r\n          });\r\n      }\r\n    }\r\n    var allorderRef = db.collection(\"allorder\").doc(doc);\r\n    var orderscripRef = db.collection(\"orderscrip\").doc(doc);\r\n    allorderRef.update({\r\n      [this.state.ordernumber]: Firebase.firestore.FieldValue.delete(),\r\n    });\r\n    orderscripRef.update({\r\n      [this.state.ordernumber]: Firebase.firestore.FieldValue.delete(),\r\n    });\r\n    this.setState({ showModal: false });\r\n  };\r\n\r\n  render() {\r\n    let divs = [];\r\n    let d = \"\";\r\n    let h,\r\n      m,\r\n      s = 0;\r\n    let allorder = this.state.allorder;\r\n    let orderscrip = this.state.orderscrip;\r\n    if (allorder && orderscrip) {\r\n      for (const order in allorder) {\r\n        d = order;\r\n        if (d !== 0) {\r\n          d = new Date(parseInt(d));\r\n          h = d.getHours();\r\n          h = h >= 0 && h < 10 ? \"0\" + h : h;\r\n          m = d.getMinutes();\r\n          m = m >= 0 && m < 10 ? \"0\" + m : m;\r\n          s = d.getSeconds();\r\n          s = s >= 0 && s < 10 ? \"0\" + s : s;\r\n          d = `${h}:${m}:${s}`;\r\n        }\r\n        divs.push(\r\n          <div\r\n            className=\"orderinfo orderdata\"\r\n            key={order}\r\n            onClick={() => this.orderAction(order)}\r\n          >\r\n            <div className=\"vals\">\r\n              <p>{orderscrip[order].symbol}</p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p className=\"exchg\">{orderscrip[order].exchange}</p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p className={\"side \" + orderscrip[order].side}>\r\n                {orderscrip[order].side}\r\n              </p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p>{orderscrip[order].quantity}</p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p>{orderscrip[order].price}</p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p>{orderscrip[order].triggerprice}</p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p>{orderscrip[order].product}</p>\r\n            </div>\r\n            <div className=\"vals\">\r\n              <p>{d}</p>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"pendingorders trades\" style={{ marginRight: \"10px\" }}>\r\n        <div className=\"orderinfo orderinfoheading\">\r\n          <div className=\"vals\">\r\n            <p>SYMBOL</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>EXCH</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>SIDE</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>QUANTITY</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>PRICE</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>TRIGGER PRICE</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>PRODUCT</p>\r\n          </div>\r\n          <div className=\"vals\">\r\n            <p>TIME</p>\r\n          </div>\r\n        </div>\r\n        {divs}\r\n        {this.state.showModal ? (\r\n          <div className=\"popup\">\r\n            <div className=\"topline\">\r\n              <div className=\"closebtn\" onClick={this.closeModal}>\r\n                X\r\n              </div>\r\n              <div className={\"symbol \" + this.state.transaction_type}>\r\n                {this.state.symbol}\r\n              </div>\r\n            </div>\r\n            <label htmlFor=\"price\" className=\"price\">\r\n              Price\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.price}\r\n              id=\"price\"\r\n              onChange={this.updateFloatValue}\r\n            />\r\n            <label htmlFor=\"quantity\" className=\"price\">\r\n              Quantity\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.quantity}\r\n              id=\"quantity\"\r\n              onChange={this.updateIntValue}\r\n            />\r\n            <label htmlFor=\"triggerprice\" className=\"price\">\r\n              Trigger Price\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.triggerprice}\r\n              id=\"triggerprice\"\r\n              onChange={this.updateFloatValue}\r\n            />\r\n            <button className=\"cancel\" onClick={this.cancelOrder}>\r\n              Cancel Order\r\n            </button>\r\n            <button className=\"modify\" onClick={this.modifyOrder}>\r\n              Modify Order\r\n            </button>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport \"../App.css\";\r\nimport Sidebar from \"../layouts/Sidebar\";\r\nimport Panel from \"../layouts/Panel\";\r\nimport MarketDataContextProvider from \"../context/MarketDataContext\";\r\nimport CompactDataContextProvider from \"../context/CompactDataContext\";\r\nimport BookContextProvider from \"../context/BookContext\";\r\nimport TopBar from \"../components/TopBar\";\r\nimport InstrumentList from \"../components/InstrumentList\";\r\nimport InfoPanel from \"../components/InfoPanel\";\r\nimport Modal from \"../components/Modal\";\r\nimport AddClient from \"../components/AddClient\";\r\nimport OrderBook from \"../components/OrderBook\";\r\nimport Notification from \"../components/Notification\";\r\nimport NotificationList from \"../components/NotificationList\";\r\nimport AllOrder from \"../components/AllOrder\";\r\n\r\nexport default class entrypoint extends PureComponent {\r\n  state = {\r\n    isLoading: true,\r\n    openModal: false,\r\n    source: \"\",\r\n    openAddClientModal: false,\r\n    menuState: 0,\r\n    notification: \"\",\r\n    notify: false,\r\n    showNotification: false,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.setState({ isLoading: false });\r\n  };\r\n\r\n  updateNotification = (notification, notify) => {\r\n    this.setState({ notification, notify });\r\n  };\r\n\r\n  showNotification = () => {\r\n    this.setState({ showNotification: !this.state.showNotification });\r\n  };\r\n\r\n  openRoute = (menuState) => {\r\n    this.setState({ menuState });\r\n  };\r\n\r\n  openModal = (source) => {\r\n    this.setState({ openModal: !this.state.openModal, source: source });\r\n  };\r\n  openAddClientModal = () => {\r\n    this.setState({ openAddClientModal: !this.state.openAddClientModal });\r\n  };\r\n  render() {\r\n    let menuDivs = [\r\n      <InfoPanel updateNotification={this.updateNotification} />,\r\n      <OrderBook updateNotification={this.updateNotification} />,\r\n      <AllOrder updateNotification={this.updateNotification} />,\r\n    ];\r\n    return this.state.isLoading ? (\r\n      <div className=\"loader\">\r\n        <div className=\"LoaderBalls\">\r\n          <div className=\"LoaderBalls__item\"></div>\r\n          <div className=\"LoaderBalls__item\"></div>\r\n          <div className=\"LoaderBalls__item\"></div>\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <div className=\"app\">\r\n        <Sidebar\r\n          openRoute={this.openRoute}\r\n          showNotification={this.showNotification}\r\n        />\r\n        <MarketDataContextProvider>\r\n          <CompactDataContextProvider>\r\n            <BookContextProvider>\r\n              <Panel>\r\n                {this.state.showNotification ? <NotificationList /> : null}\r\n                {this.state.openModal ? (\r\n                  <Modal\r\n                    closeModal={this.openModal}\r\n                    source={this.state.source}\r\n                  />\r\n                ) : null}\r\n\r\n                {this.state.openAddClientModal ? (\r\n                  <AddClient closeAddClientModal={this.openAddClientModal} />\r\n                ) : null}\r\n\r\n                <TopBar\r\n                  openModal={this.openModal}\r\n                  openAddClientModal={this.openAddClientModal}\r\n                />\r\n\r\n                <InstrumentList openModal={this.openModal} />\r\n\r\n                {menuDivs[this.state.menuState]}\r\n\r\n                {this.state.notify && this.state.notification ? (\r\n                  <Notification\r\n                    notification={this.state.notification}\r\n                    updateNotification={this.updateNotification}\r\n                  />\r\n                ) : null}\r\n              </Panel>\r\n            </BookContextProvider>\r\n          </CompactDataContextProvider>\r\n        </MarketDataContextProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, createContext } from \"react\";\r\nimport { Firebase } from \"../config/firebase\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport default class AuthContextProvider extends Component {\r\n  state = {\r\n    user: \"\",\r\n    checking: true,\r\n    updateData: (data) => {\r\n      this.setState(data);\r\n    },\r\n  };\r\n\r\n  componentDidMount() {\r\n    let that = this;\r\n    Firebase.auth().onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        // User is signed in.\r\n        if (user != null) {\r\n          that.setState({ user, checking: false });\r\n        }\r\n      } else {\r\n        // No user is signed in.\r\n        that.setState({ user: \"\", checking: false });\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <AuthContext.Provider value={{ ...this.state }}>\r\n        {this.props.children}\r\n      </AuthContext.Provider>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Firebase } from \"../config/firebase\";\r\nimport \"../css/signing.css\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nexport default class signing extends Component {\r\n  static contextType = AuthContext;\r\n  signin = () => {\r\n    this.context.updateData({ checking: true });\r\n    var provider = new Firebase.auth.GoogleAuthProvider();\r\n    provider.addScope(\"https://www.googleapis.com/auth/userinfo.profile\");\r\n    Firebase.auth()\r\n      .signInWithPopup(provider)\r\n      .then(function (result) {\r\n        var token = result.credential.accessToken;\r\n        var user = result.user.providerData[0];\r\n        localStorage.setItem(\"authtoken\", token);\r\n        localStorage.setItem(\"userdata\", JSON.stringify(user));\r\n      })\r\n      .catch(function (error) {\r\n        alert(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.context.checking) {\r\n      return (\r\n        <div className=\"loader\">\r\n          <div className=\"LoaderBalls\">\r\n            <div className=\"LoaderBalls__item\"></div>\r\n            <div className=\"LoaderBalls__item\"></div>\r\n            <div className=\"LoaderBalls__item\"></div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <h1 className=\"tradingtitle\">TRADING APP</h1>\r\n        <button type=\"button\" className=\"google-button\" onClick={this.signin}>\r\n          <span className=\"google-button__icon\">\r\n            <svg viewBox=\"0 0 366 372\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path\r\n                d=\"M125.9 10.2c40.2-13.9 85.3-13.6 125.3 1.1 22.2 8.2 42.5 21 59.9 37.1-5.8 6.3-12.1 12.2-18.1 18.3l-34.2 34.2c-11.3-10.8-25.1-19-40.1-23.6-17.6-5.3-36.6-6.1-54.6-2.2-21 4.5-40.5 15.5-55.6 30.9-12.2 12.3-21.4 27.5-27 43.9-20.3-15.8-40.6-31.5-61-47.3 21.5-43 60.1-76.9 105.4-92.4z\"\r\n                id=\"Shape\"\r\n                fill=\"#EA4335\"\r\n              />\r\n              <path\r\n                d=\"M20.6 102.4c20.3 15.8 40.6 31.5 61 47.3-8 23.3-8 49.2 0 72.4-20.3 15.8-40.6 31.6-60.9 47.3C1.9 232.7-3.8 189.6 4.4 149.2c3.3-16.2 8.7-32 16.2-46.8z\"\r\n                id=\"Shape\"\r\n                fill=\"#FBBC05\"\r\n              />\r\n              <path\r\n                d=\"M361.7 151.1c5.8 32.7 4.5 66.8-4.7 98.8-8.5 29.3-24.6 56.5-47.1 77.2l-59.1-45.9c19.5-13.1 33.3-34.3 37.2-57.5H186.6c.1-24.2.1-48.4.1-72.6h175z\"\r\n                id=\"Shape\"\r\n                fill=\"#4285F4\"\r\n              />\r\n              <path\r\n                d=\"M81.4 222.2c7.8 22.9 22.8 43.2 42.6 57.1 12.4 8.7 26.6 14.9 41.4 17.9 14.6 3 29.7 2.6 44.4.1 14.6-2.6 28.7-7.9 41-16.2l59.1 45.9c-21.3 19.7-48 33.1-76.2 39.6-31.2 7.1-64.2 7.3-95.2-1-24.6-6.5-47.7-18.2-67.6-34.1-20.9-16.6-38.3-38-50.4-62 20.3-15.7 40.6-31.5 60.9-47.3z\"\r\n                fill=\"#34A853\"\r\n              />\r\n            </svg>\r\n          </span>\r\n          <span className=\"google-button__text\">Sign in with Google</span>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport EntryPoint from \"./pages/entrypoint\";\nimport Signin from \"./pages/signing\";\nimport { AuthContext } from \"./context/AuthContext\";\n\nclass App extends Component {\n  static contextType = AuthContext;\n  render() {\n    return (\n      <Router>\n        <Route\n          path=\"/\"\n          render={() => {\n            return this.context.user ? (\n              <Redirect to=\"/\" />\n            ) : (\n              <Redirect to=\"/signin\" />\n            );\n          }}\n        />\n        <Route exact path=\"/signin\">\n          <Signin />\n        </Route>\n        <Route exact path=\"/\">\n          <EntryPoint />\n        </Route>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport AuthContextProvider from \"./context/AuthContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthContextProvider>\n      <App />\n    </AuthContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}